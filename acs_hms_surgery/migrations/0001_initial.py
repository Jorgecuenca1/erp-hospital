# Generated by Django 4.2.23 on 2025-07-12 05:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('acs_hms_base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OperationTheater',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('theater_number', models.CharField(max_length=20, unique=True)),
                ('theater_type', models.CharField(choices=[('general', 'General Purpose'), ('cardiac', 'Cardiac Surgery'), ('orthopedic', 'Orthopedic Surgery'), ('neurological', 'Neurological Surgery'), ('emergency', 'Emergency Surgery'), ('day_surgery', 'Day Surgery'), ('hybrid', 'Hybrid Theater')], max_length=20)),
                ('floor', models.CharField(max_length=20)),
                ('capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('available', 'Available'), ('occupied', 'Occupied'), ('maintenance', 'Under Maintenance'), ('cleaning', 'Cleaning'), ('reserved', 'Reserved')], default='available', max_length=20)),
                ('equipment_list', models.TextField(blank=True)),
                ('last_maintenance', models.DateTimeField(blank=True, null=True)),
                ('next_maintenance', models.DateTimeField(blank=True, null=True)),
                ('temperature_control', models.BooleanField(default=True)),
                ('air_filtration', models.BooleanField(default=True)),
                ('emergency_backup', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Operation Theater',
                'verbose_name_plural': 'Operation Theaters',
                'ordering': ['theater_number'],
            },
        ),
        migrations.CreateModel(
            name='Surgery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surgery_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('scheduled_date', models.DateTimeField()),
                ('actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('pre_op', 'Pre-Operative'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('postponed', 'Postponed'), ('emergency', 'Emergency')], default='scheduled', max_length=20)),
                ('priority', models.CharField(choices=[('routine', 'Routine'), ('urgent', 'Urgent'), ('emergency', 'Emergency'), ('elective', 'Elective')], default='routine', max_length=20)),
                ('anesthesia_type', models.CharField(choices=[('general', 'General Anesthesia'), ('regional', 'Regional Anesthesia'), ('local', 'Local Anesthesia'), ('spinal', 'Spinal Anesthesia'), ('epidural', 'Epidural Anesthesia'), ('conscious_sedation', 'Conscious Sedation'), ('none', 'No Anesthesia')], default='general', max_length=20)),
                ('pre_op_diagnosis', models.TextField()),
                ('pre_op_notes', models.TextField(blank=True)),
                ('pre_op_vitals', models.JSONField(blank=True, default=dict)),
                ('pre_op_checklist', models.JSONField(blank=True, default=dict)),
                ('operative_procedure', models.TextField(blank=True)),
                ('operative_notes', models.TextField(blank=True)),
                ('intra_operative_complications', models.TextField(blank=True)),
                ('blood_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('fluids_given', models.TextField(blank=True)),
                ('post_op_diagnosis', models.TextField(blank=True)),
                ('post_op_notes', models.TextField(blank=True)),
                ('post_op_instructions', models.TextField(blank=True)),
                ('recovery_notes', models.TextField(blank=True)),
                ('estimated_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('actual_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('consent_obtained', models.BooleanField(default=False)),
                ('consent_date', models.DateTimeField(blank=True, null=True)),
                ('insurance_approved', models.BooleanField(default=False)),
                ('cancelled_reason', models.TextField(blank=True)),
                ('cancelled_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancelled_surgeries', to='acs_hms_base.hmsuser')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_surgeries', to='acs_hms_base.hmsuser')),
                ('operation_theater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='acs_hms_surgery.operationtheater')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surgeries', to='acs_hms_base.patient')),
                ('primary_surgeon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_surgeries', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Surgery',
                'verbose_name_plural': 'Surgeries',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='SurgerySupplies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('supply_type', models.CharField(choices=[('sutures', 'Sutures'), ('gauze', 'Gauze'), ('bandages', 'Bandages'), ('gloves', 'Gloves'), ('masks', 'Masks'), ('gowns', 'Surgical Gowns'), ('drapes', 'Surgical Drapes'), ('implants', 'Implants'), ('prosthetics', 'Prosthetics'), ('medications', 'Medications'), ('antiseptics', 'Antiseptics'), ('contrast_agents', 'Contrast Agents'), ('other', 'Other Supplies')], max_length=20)),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('unit_of_measure', models.CharField(default='pieces', max_length=20)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('stock_quantity', models.IntegerField(default=0)),
                ('minimum_stock', models.IntegerField(default=10)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=50)),
                ('is_sterile', models.BooleanField(default=False)),
                ('is_disposable', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Surgery Supplies',
                'verbose_name_plural': 'Surgery Supplies',
                'ordering': ['supply_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SurgeryType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('specialty', models.CharField(choices=[('general', 'General Surgery'), ('cardiac', 'Cardiac Surgery'), ('orthopedic', 'Orthopedic Surgery'), ('neurological', 'Neurological Surgery'), ('plastic', 'Plastic Surgery'), ('ophthalmology', 'Ophthalmology Surgery'), ('gynecology', 'Gynecological Surgery'), ('pediatric', 'Pediatric Surgery'), ('vascular', 'Vascular Surgery'), ('thoracic', 'Thoracic Surgery'), ('urological', 'Urological Surgery'), ('oncological', 'Oncological Surgery'), ('gastroenterology', 'Gastroenterological Surgery'), ('ent', 'ENT Surgery'), ('dermatology', 'Dermatological Surgery')], max_length=20)),
                ('description', models.TextField()),
                ('estimated_duration', models.IntegerField(help_text='Duration in minutes', validators=[django.core.validators.MinValueValidator(1)])),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], default='medium', max_length=10)),
                ('requires_anesthesia', models.BooleanField(default=True)),
                ('requires_icu', models.BooleanField(default=False)),
                ('requires_blood_bank', models.BooleanField(default=False)),
                ('standard_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Surgery Type',
                'verbose_name_plural': 'Surgery Types',
                'ordering': ['specialty', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SurgeryTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('role', models.CharField(choices=[('primary_surgeon', 'Primary Surgeon'), ('assistant_surgeon', 'Assistant Surgeon'), ('anesthesiologist', 'Anesthesiologist'), ('scrub_nurse', 'Scrub Nurse'), ('circulating_nurse', 'Circulating Nurse'), ('technician', 'Technician'), ('resident', 'Resident'), ('observer', 'Observer')], max_length=20)),
                ('specialization', models.CharField(blank=True, max_length=200)),
                ('experience_years', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('certification', models.CharField(blank=True, max_length=200)),
                ('is_available', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='surgery_teams', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Surgery Team Member',
                'verbose_name_plural': 'Surgery Team Members',
                'ordering': ['role', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SurgerySupplyUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_used', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('used_at', models.DateTimeField(auto_now_add=True)),
                ('supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='acs_hms_surgery.surgerysupplies')),
                ('surgery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supply_usage', to='acs_hms_surgery.surgery')),
                ('used_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Surgery Supply Usage',
                'verbose_name_plural': 'Surgery Supply Usage',
                'ordering': ['-used_at'],
            },
        ),
        migrations.CreateModel(
            name='SurgeryEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('equipment_type', models.CharField(choices=[('surgical_instruments', 'Surgical Instruments'), ('monitoring_equipment', 'Monitoring Equipment'), ('anesthesia_machine', 'Anesthesia Machine'), ('ventilator', 'Ventilator'), ('electrocautery', 'Electrocautery'), ('laser', 'Laser Equipment'), ('microscope', 'Surgical Microscope'), ('c_arm', 'C-Arm'), ('defibrillator', 'Defibrillator'), ('infusion_pump', 'Infusion Pump'), ('suction_unit', 'Suction Unit'), ('other', 'Other Equipment')], max_length=30)),
                ('model', models.CharField(blank=True, max_length=100)),
                ('manufacturer', models.CharField(blank=True, max_length=100)),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('warranty_expires', models.DateField(blank=True, null=True)),
                ('last_maintenance', models.DateTimeField(blank=True, null=True)),
                ('next_maintenance', models.DateTimeField(blank=True, null=True)),
                ('is_operational', models.BooleanField(default=True)),
                ('maintenance_notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('operation_theater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='acs_hms_surgery.operationtheater')),
            ],
            options={
                'verbose_name': 'Surgery Equipment',
                'verbose_name_plural': 'Surgery Equipment',
                'ordering': ['equipment_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SurgeryComplications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complication_type', models.CharField(choices=[('bleeding', 'Bleeding'), ('infection', 'Infection'), ('anesthesia_reaction', 'Anesthesia Reaction'), ('organ_damage', 'Organ Damage'), ('blood_clot', 'Blood Clot'), ('pneumonia', 'Pneumonia'), ('wound_dehiscence', 'Wound Dehiscence'), ('allergic_reaction', 'Allergic Reaction'), ('cardiac_event', 'Cardiac Event'), ('respiratory_event', 'Respiratory Event'), ('other', 'Other Complication')], max_length=20)),
                ('severity', models.CharField(choices=[('minor', 'Minor'), ('moderate', 'Moderate'), ('severe', 'Severe'), ('critical', 'Critical')], max_length=10)),
                ('description', models.TextField()),
                ('occurred_at', models.DateTimeField()),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('treatment_given', models.TextField(blank=True)),
                ('outcome', models.TextField(blank=True)),
                ('is_resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_complications', to='acs_hms_base.hmsuser')),
                ('surgery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complications', to='acs_hms_surgery.surgery')),
            ],
            options={
                'verbose_name': 'Surgery Complication',
                'verbose_name_plural': 'Surgery Complications',
                'ordering': ['-occurred_at'],
            },
        ),
        migrations.AddField(
            model_name='surgery',
            name='surgery_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='acs_hms_surgery.surgerytype'),
        ),
        migrations.AddField(
            model_name='surgery',
            name='team_members',
            field=models.ManyToManyField(blank=True, to='acs_hms_surgery.surgeryteam'),
        ),
        migrations.CreateModel(
            name='PostOperativeCare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('care_type', models.CharField(choices=[('wound_care', 'Wound Care'), ('medication', 'Medication'), ('diet', 'Diet Instructions'), ('activity', 'Activity Restrictions'), ('follow_up', 'Follow-up Appointments'), ('monitoring', 'Vital Signs Monitoring'), ('physiotherapy', 'Physiotherapy'), ('other', 'Other Care')], max_length=20)),
                ('instructions', models.TextField()),
                ('frequency', models.CharField(blank=True, max_length=100)),
                ('duration', models.CharField(blank=True, max_length=100)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_post_op_care', to='acs_hms_base.hmsuser')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_post_op_care', to='acs_hms_base.hmsuser')),
                ('surgery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_op_care', to='acs_hms_surgery.surgery')),
            ],
            options={
                'verbose_name': 'Post-Operative Care',
                'verbose_name_plural': 'Post-Operative Care',
                'ordering': ['-start_date'],
            },
        ),
    ]
