# Generated by Django 4.2.23 on 2025-07-12 03:43

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_id', models.CharField(max_length=20, unique=True, verbose_name='Appointment ID')),
                ('appointment_date', models.DateField(verbose_name='Appointment Date')),
                ('appointment_time', models.TimeField(verbose_name='Appointment Time')),
                ('estimated_duration', models.DurationField(verbose_name='Estimated Duration')),
                ('appointment_type', models.CharField(choices=[('CONSULTATION', 'Consultation'), ('FOLLOW_UP', 'Follow-up'), ('EMERGENCY', 'Emergency'), ('SURGERY', 'Surgery'), ('LABORATORY', 'Laboratory'), ('RADIOLOGY', 'Radiology'), ('PHYSIOTHERAPY', 'Physiotherapy'), ('DENTAL', 'Dental'), ('GYNECOLOGY', 'Gynecology'), ('OPHTHALMOLOGY', 'Ophthalmology'), ('PEDIATRICS', 'Pediatrics'), ('AESTHETIC', 'Aesthetic')], max_length=20, verbose_name='Appointment Type')),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('NORMAL', 'Normal'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='NORMAL', max_length=10, verbose_name='Priority')),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('CONFIRMED', 'Confirmed'), ('CHECKED_IN', 'Checked In'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('NO_SHOW', 'No Show'), ('RESCHEDULED', 'Rescheduled')], default='SCHEDULED', max_length=15, verbose_name='Status')),
                ('chief_complaint', models.TextField(blank=True, null=True, verbose_name='Chief Complaint')),
                ('symptoms', models.TextField(blank=True, null=True, verbose_name='Symptoms')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('booking_date', models.DateTimeField(auto_now_add=True, verbose_name='Booking Date')),
                ('follow_up_required', models.BooleanField(default=False, verbose_name='Follow-up Required')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Follow-up Date')),
                ('follow_up_notes', models.TextField(blank=True, null=True, verbose_name='Follow-up Notes')),
                ('consultation_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Consultation Fee')),
                ('insurance_covered', models.BooleanField(default=False, verbose_name='Insurance Covered')),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'ordering': ['appointment_date', 'appointment_time'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Department Name')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Department Code')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Location')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='HMSUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True, verbose_name='Employee ID')),
                ('user_type', models.CharField(choices=[('DOCTOR', 'Doctor'), ('NURSE', 'Nurse'), ('TECHNICIAN', 'Technician'), ('PHARMACIST', 'Pharmacist'), ('RADIOLOGIST', 'Radiologist'), ('LABORATORY_TECHNICIAN', 'Laboratory Technician'), ('RECEPTIONIST', 'Receptionist'), ('ADMINISTRATOR', 'Administrator'), ('PATIENT', 'Patient'), ('INSURANCE_AGENT', 'Insurance Agent'), ('MARKETING', 'Marketing'), ('FINANCE', 'Finance'), ('IT_SUPPORT', 'IT Support')], max_length=25, verbose_name='User Type')),
                ('phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone')),
                ('mobile', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Mobile')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='State')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('zip_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='ZIP Code')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True, verbose_name='Gender')),
                ('license_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='License Number')),
                ('qualification', models.CharField(blank=True, max_length=200, null=True, verbose_name='Qualification')),
                ('experience_years', models.PositiveIntegerField(blank=True, null=True, verbose_name='Years of Experience')),
                ('specialization', models.CharField(blank=True, max_length=100, null=True, verbose_name='Specialization')),
                ('joining_date', models.DateField(default=django.utils.timezone.now, verbose_name='Joining Date')),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Salary')),
                ('shift', models.CharField(blank=True, max_length=20, null=True, verbose_name='Shift')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user_photos/', verbose_name='Photo')),
                ('signature', models.ImageField(blank=True, null=True, upload_to='user_signatures/', verbose_name='Signature')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='acs_hms_base.department')),
            ],
            options={
                'verbose_name': 'HMS User',
                'verbose_name_plural': 'HMS Users',
            },
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Hospital Name')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Hospital Code')),
                ('address', models.TextField(verbose_name='Address')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('state', models.CharField(max_length=100, verbose_name='State/Province')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('zip_code', models.CharField(max_length=20, verbose_name='ZIP Code')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('license_number', models.CharField(max_length=50, verbose_name='License Number')),
                ('established_date', models.DateField(verbose_name='Established Date')),
                ('registration_number', models.CharField(max_length=50, verbose_name='Registration Number')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Hospital',
                'verbose_name_plural': 'Hospitals',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, verbose_name='Room Number')),
                ('name', models.CharField(max_length=100, verbose_name='Room Name')),
                ('room_type', models.CharField(choices=[('GENERAL', 'General Ward'), ('PRIVATE', 'Private Room'), ('ICU', 'Intensive Care Unit'), ('EMERGENCY', 'Emergency Room'), ('SURGERY', 'Surgery Room'), ('CONSULTATION', 'Consultation Room'), ('LABORATORY', 'Laboratory'), ('RADIOLOGY', 'Radiology'), ('PHARMACY', 'Pharmacy'), ('ADMINISTRATION', 'Administration')], max_length=20, verbose_name='Room Type')),
                ('floor', models.CharField(max_length=10, verbose_name='Floor')),
                ('capacity', models.PositiveIntegerField(default=1, verbose_name='Capacity')),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('OCCUPIED', 'Occupied'), ('MAINTENANCE', 'Under Maintenance'), ('RESERVED', 'Reserved'), ('CLEANING', 'Cleaning')], default='AVAILABLE', max_length=20, verbose_name='Status')),
                ('amenities', models.TextField(blank=True, null=True, verbose_name='Amenities')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='acs_hms_base.department')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
                'unique_together': {('department', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.CharField(max_length=20, unique=True, verbose_name='Patient ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Middle Name')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, verbose_name='Gender')),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3, null=True, verbose_name='Blood Group')),
                ('marital_status', models.CharField(blank=True, choices=[('SINGLE', 'Single'), ('MARRIED', 'Married'), ('DIVORCED', 'Divorced'), ('WIDOWED', 'Widowed')], max_length=10, null=True, verbose_name='Marital Status')),
                ('phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone')),
                ('mobile', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Mobile')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('address', models.TextField(verbose_name='Address')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('state', models.CharField(max_length=100, verbose_name='State')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('zip_code', models.CharField(max_length=20, verbose_name='ZIP Code')),
                ('medical_record_number', models.CharField(max_length=20, unique=True, verbose_name='Medical Record Number')),
                ('patient_type', models.CharField(choices=[('OUTPATIENT', 'Outpatient'), ('INPATIENT', 'Inpatient'), ('EMERGENCY', 'Emergency'), ('CONSULTATION', 'Consultation')], default='OUTPATIENT', max_length=15, verbose_name='Patient Type')),
                ('insurance_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Insurance Number')),
                ('insurance_provider', models.CharField(blank=True, max_length=100, null=True, verbose_name='Insurance Provider')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Emergency Contact Name')),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Emergency Contact Phone')),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50, null=True, verbose_name='Emergency Contact Relationship')),
                ('allergies', models.TextField(blank=True, null=True, verbose_name='Allergies')),
                ('medical_history', models.TextField(blank=True, null=True, verbose_name='Medical History')),
                ('current_medications', models.TextField(blank=True, null=True, verbose_name='Current Medications')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='patient_photos/', verbose_name='Photo')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Registration Date')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('primary_doctor', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'DOCTOR'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_patients', to='acs_hms_base.hmsuser')),
                ('registered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registered_patients', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chief_complaint', models.TextField(verbose_name='Chief Complaint')),
                ('history_of_present_illness', models.TextField(blank=True, null=True, verbose_name='History of Present Illness')),
                ('physical_examination', models.TextField(blank=True, null=True, verbose_name='Physical Examination')),
                ('temperature', models.FloatField(blank=True, null=True, verbose_name='Temperature (°C)')),
                ('blood_pressure_systolic', models.IntegerField(blank=True, null=True, verbose_name='Blood Pressure (Systolic)')),
                ('blood_pressure_diastolic', models.IntegerField(blank=True, null=True, verbose_name='Blood Pressure (Diastolic)')),
                ('pulse_rate', models.IntegerField(blank=True, null=True, verbose_name='Pulse Rate')),
                ('respiratory_rate', models.IntegerField(blank=True, null=True, verbose_name='Respiratory Rate')),
                ('oxygen_saturation', models.FloatField(blank=True, null=True, verbose_name='Oxygen Saturation (%)')),
                ('weight', models.FloatField(blank=True, null=True, verbose_name='Weight (kg)')),
                ('height', models.FloatField(blank=True, null=True, verbose_name='Height (cm)')),
                ('provisional_diagnosis', models.TextField(blank=True, null=True, verbose_name='Provisional Diagnosis')),
                ('final_diagnosis', models.TextField(blank=True, null=True, verbose_name='Final Diagnosis')),
                ('treatment_plan', models.TextField(blank=True, null=True, verbose_name='Treatment Plan')),
                ('prescriptions', models.TextField(blank=True, null=True, verbose_name='Prescriptions')),
                ('lab_tests_ordered', models.TextField(blank=True, null=True, verbose_name='Lab Tests Ordered')),
                ('radiology_tests_ordered', models.TextField(blank=True, null=True, verbose_name='Radiology Tests Ordered')),
                ('referrals', models.TextField(blank=True, null=True, verbose_name='Referrals')),
                ('record_date', models.DateTimeField(auto_now_add=True, verbose_name='Record Date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='acs_hms_base.appointment')),
                ('doctor', models.ForeignKey(limit_choices_to={'user_type': 'DOCTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='acs_hms_base.hmsuser')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='acs_hms_base.patient')),
            ],
            options={
                'verbose_name': 'Medical Record',
                'verbose_name_plural': 'Medical Records',
                'ordering': ['-record_date'],
            },
        ),
        migrations.CreateModel(
            name='HospitalConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_online_booking', models.BooleanField(default=True, verbose_name='Allow Online Booking')),
                ('booking_advance_days', models.PositiveIntegerField(default=30, verbose_name='Booking Advance Days')),
                ('appointment_duration', models.DurationField(default=datetime.timedelta(seconds=1800), verbose_name='Default Appointment Duration')),
                ('default_consultation_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Default Consultation Fee')),
                ('currency', models.CharField(default='USD', max_length=10, verbose_name='Currency')),
                ('send_appointment_reminders', models.BooleanField(default=True, verbose_name='Send Appointment Reminders')),
                ('reminder_hours_before', models.PositiveIntegerField(default=24, verbose_name='Reminder Hours Before')),
                ('patient_portal_enabled', models.BooleanField(default=True, verbose_name='Patient Portal Enabled')),
                ('allow_patient_registration', models.BooleanField(default=True, verbose_name='Allow Patient Registration')),
                ('hospital', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='configuration', to='acs_hms_base.hospital')),
            ],
            options={
                'verbose_name': 'Hospital Configuration',
                'verbose_name_plural': 'Hospital Configurations',
            },
        ),
        migrations.AddField(
            model_name='hmsuser',
            name='hospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='acs_hms_base.hospital'),
        ),
        migrations.AddField(
            model_name='hmsuser',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='hms_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='department',
            name='head_of_department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='headed_departments', to='acs_hms_base.hmsuser'),
        ),
        migrations.AddField(
            model_name='department',
            name='hospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='acs_hms_base.hospital'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='booked_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='booked_appointments', to='acs_hms_base.hmsuser'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='acs_hms_base.department'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(limit_choices_to={'user_type': 'DOCTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_appointments', to='acs_hms_base.hmsuser'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='acs_hms_base.patient'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='acs_hms_base.room'),
        ),
        migrations.AlterUniqueTogether(
            name='department',
            unique_together={('hospital', 'code')},
        ),
    ]
