# Generated by Django 4.2.23 on 2025-07-12 03:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('acs_hms_base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PediatricPatient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_weight', models.FloatField(blank=True, null=True, verbose_name='Birth Weight (grams)')),
                ('birth_height', models.FloatField(blank=True, null=True, verbose_name='Birth Height (cm)')),
                ('birth_head_circumference', models.FloatField(blank=True, null=True, verbose_name='Birth Head Circumference (cm)')),
                ('gestational_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Gestational Age (weeks)')),
                ('delivery_type', models.CharField(blank=True, choices=[('NORMAL', 'Normal Vaginal Delivery'), ('CESAREAN', 'Cesarean Section'), ('FORCEPS', 'Forceps Delivery'), ('VACUUM', 'Vacuum Extraction')], max_length=20, null=True, verbose_name='Delivery Type')),
                ('apgar_score_1_min', models.PositiveIntegerField(blank=True, null=True, verbose_name='APGAR Score (1 min)')),
                ('apgar_score_5_min', models.PositiveIntegerField(blank=True, null=True, verbose_name='APGAR Score (5 min)')),
                ('current_feeding_type', models.CharField(blank=True, choices=[('BREASTFED', 'Exclusively Breastfed'), ('FORMULA', 'Formula Fed'), ('MIXED', 'Mixed Feeding'), ('SOLID', 'Solid Food')], max_length=20, null=True, verbose_name='Current Feeding Type')),
                ('breastfeeding_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Breastfeeding Duration (months)')),
                ('solid_food_start_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Solid Food Start Age (months)')),
                ('head_control_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Head Control Age (months)')),
                ('sitting_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Sitting Age (months)')),
                ('crawling_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Crawling Age (months)')),
                ('walking_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Walking Age (months)')),
                ('first_word_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='First Word Age (months)')),
                ('school_attending', models.BooleanField(default=False, verbose_name='Attending School')),
                ('school_grade', models.CharField(blank=True, max_length=50, null=True, verbose_name='School Grade')),
                ('learning_difficulties', models.BooleanField(default=False, verbose_name='Learning Difficulties')),
                ('parents_marital_status', models.CharField(blank=True, max_length=20, null=True, verbose_name='Parents Marital Status')),
                ('siblings_count', models.PositiveIntegerField(default=0, verbose_name='Number of Siblings')),
                ('family_structure', models.TextField(blank=True, null=True, verbose_name='Family Structure')),
                ('previous_hospitalizations', models.TextField(blank=True, null=True, verbose_name='Previous Hospitalizations')),
                ('chronic_conditions', models.TextField(blank=True, null=True, verbose_name='Chronic Conditions')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pediatric_profile', to='acs_hms_base.patient')),
            ],
            options={
                'verbose_name': 'Pediatric Patient',
                'verbose_name_plural': 'Pediatric Patients',
            },
        ),
        migrations.CreateModel(
            name='PediatricProcedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('procedure_type', models.CharField(choices=[('CIRCUMCISION', 'Circumcision'), ('HERNIA_REPAIR', 'Hernia Repair'), ('LUMBAR_PUNCTURE', 'Lumbar Puncture'), ('BONE_MARROW_ASPIRATION', 'Bone Marrow Aspiration'), ('FOREIGN_BODY_REMOVAL', 'Foreign Body Removal'), ('TONSILLECTOMY', 'Tonsillectomy'), ('ADENOIDECTOMY', 'Adenoidectomy'), ('APPENDECTOMY', 'Appendectomy'), ('CARDIAC_CATHETERIZATION', 'Cardiac Catheterization'), ('ENDOSCOPY', 'Endoscopy'), ('BRONCHOSCOPY', 'Bronchoscopy'), ('CENTRAL_LINE_INSERTION', 'Central Line Insertion')], max_length=50, verbose_name='Procedure Type')),
                ('procedure_date', models.DateField(verbose_name='Procedure Date')),
                ('pre_procedure_weight', models.FloatField(blank=True, null=True, verbose_name='Pre-procedure Weight (kg)')),
                ('pre_procedure_assessment', models.TextField(blank=True, null=True, verbose_name='Pre-procedure Assessment')),
                ('consent_obtained', models.BooleanField(default=False, verbose_name='Consent Obtained')),
                ('procedure_details', models.TextField(blank=True, null=True, verbose_name='Procedure Details')),
                ('anesthesia_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Anesthesia Type')),
                ('complications', models.TextField(blank=True, null=True, verbose_name='Complications')),
                ('post_procedure_care', models.TextField(blank=True, null=True, verbose_name='Post-procedure Care')),
                ('parent_instructions', models.TextField(blank=True, null=True, verbose_name='Parent Instructions')),
                ('follow_up_required', models.BooleanField(default=True, verbose_name='Follow-up Required')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Follow-up Date')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pediatric_procedures', to='acs_hms_base.hmsuser')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procedures', to='acs_hms_paediatric.pediatricpatient')),
            ],
            options={
                'verbose_name': 'Pediatric Procedure',
                'verbose_name_plural': 'Pediatric Procedures',
                'ordering': ['-procedure_date'],
            },
        ),
        migrations.CreateModel(
            name='PediatricMedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_history', models.TextField(blank=True, null=True, verbose_name='Birth History')),
                ('feeding_history', models.TextField(blank=True, null=True, verbose_name='Feeding History')),
                ('developmental_history', models.TextField(blank=True, null=True, verbose_name='Developmental History')),
                ('immunization_status', models.TextField(blank=True, null=True, verbose_name='Immunization Status')),
                ('weight_for_age', models.CharField(blank=True, max_length=20, null=True, verbose_name='Weight for Age')),
                ('height_for_age', models.CharField(blank=True, max_length=20, null=True, verbose_name='Height for Age')),
                ('head_circumference_for_age', models.CharField(blank=True, max_length=20, null=True, verbose_name='Head Circumference for Age')),
                ('behavior_concerns', models.TextField(blank=True, null=True, verbose_name='Behavior Concerns')),
                ('sleep_patterns', models.TextField(blank=True, null=True, verbose_name='Sleep Patterns')),
                ('eating_patterns', models.TextField(blank=True, null=True, verbose_name='Eating Patterns')),
                ('school_performance', models.TextField(blank=True, null=True, verbose_name='School Performance')),
                ('caregiver_concerns', models.TextField(blank=True, null=True, verbose_name='Caregiver Concerns')),
                ('family_dynamics', models.TextField(blank=True, null=True, verbose_name='Family Dynamics')),
                ('age_appropriate_treatment', models.TextField(blank=True, null=True, verbose_name='Age-Appropriate Treatment')),
                ('medication_dosing', models.TextField(blank=True, null=True, verbose_name='Medication Dosing')),
                ('parent_education', models.TextField(blank=True, null=True, verbose_name='Parent Education')),
                ('medical_record', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pediatric_record', to='acs_hms_base.medicalrecord')),
                ('pediatric_patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='acs_hms_paediatric.pediatricpatient')),
            ],
            options={
                'verbose_name': 'Pediatric Medical Record',
                'verbose_name_plural': 'Pediatric Medical Records',
            },
        ),
        migrations.CreateModel(
            name='NutritionalAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_date', models.DateField(verbose_name='Assessment Date')),
                ('feeding_pattern', models.TextField(verbose_name='Feeding Pattern')),
                ('food_preferences', models.TextField(blank=True, null=True, verbose_name='Food Preferences')),
                ('food_allergies', models.TextField(blank=True, null=True, verbose_name='Food Allergies')),
                ('vitamin_supplements', models.TextField(blank=True, null=True, verbose_name='Vitamin Supplements')),
                ('weight_for_height', models.CharField(blank=True, max_length=20, null=True, verbose_name='Weight for Height')),
                ('mid_upper_arm_circumference', models.FloatField(blank=True, null=True, verbose_name='Mid Upper Arm Circumference (cm)')),
                ('tricep_skinfold', models.FloatField(blank=True, null=True, verbose_name='Tricep Skinfold (mm)')),
                ('nutritional_status', models.CharField(choices=[('NORMAL', 'Normal'), ('MILD_MALNUTRITION', 'Mild Malnutrition'), ('MODERATE_MALNUTRITION', 'Moderate Malnutrition'), ('SEVERE_MALNUTRITION', 'Severe Malnutrition'), ('OVERWEIGHT', 'Overweight'), ('OBESE', 'Obese')], max_length=30, verbose_name='Nutritional Status')),
                ('clinical_signs', models.TextField(blank=True, null=True, verbose_name='Clinical Signs')),
                ('hemoglobin', models.FloatField(blank=True, null=True, verbose_name='Hemoglobin (g/dL)')),
                ('serum_albumin', models.FloatField(blank=True, null=True, verbose_name='Serum Albumin (g/dL)')),
                ('vitamin_d', models.FloatField(blank=True, null=True, verbose_name='Vitamin D (ng/mL)')),
                ('dietary_recommendations', models.TextField(blank=True, null=True, verbose_name='Dietary Recommendations')),
                ('supplement_recommendations', models.TextField(blank=True, null=True, verbose_name='Supplement Recommendations')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Follow-up Date')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutritional_assessments', to='acs_hms_base.hmsuser')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nutritional_assessments', to='acs_hms_paediatric.pediatricpatient')),
            ],
            options={
                'verbose_name': 'Nutritional Assessment',
                'verbose_name_plural': 'Nutritional Assessments',
                'ordering': ['-assessment_date'],
            },
        ),
        migrations.CreateModel(
            name='GrowthChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_date', models.DateField(verbose_name='Measurement Date')),
                ('age_in_months', models.PositiveIntegerField(verbose_name='Age in Months')),
                ('weight', models.FloatField(verbose_name='Weight (kg)')),
                ('height', models.FloatField(verbose_name='Height (cm)')),
                ('head_circumference', models.FloatField(blank=True, null=True, verbose_name='Head Circumference (cm)')),
                ('weight_percentile', models.FloatField(blank=True, null=True, verbose_name='Weight Percentile')),
                ('height_percentile', models.FloatField(blank=True, null=True, verbose_name='Height Percentile')),
                ('head_circumference_percentile', models.FloatField(blank=True, null=True, verbose_name='Head Circumference Percentile')),
                ('bmi', models.FloatField(blank=True, null=True, verbose_name='BMI')),
                ('bmi_percentile', models.FloatField(blank=True, null=True, verbose_name='BMI Percentile')),
                ('nutritional_status', models.CharField(blank=True, choices=[('NORMAL', 'Normal'), ('UNDERWEIGHT', 'Underweight'), ('OVERWEIGHT', 'Overweight'), ('OBESE', 'Obese'), ('STUNTED', 'Stunted'), ('WASTED', 'Wasted')], max_length=20, null=True, verbose_name='Nutritional Status')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='growth_charts', to='acs_hms_paediatric.pediatricpatient')),
            ],
            options={
                'verbose_name': 'Growth Chart',
                'verbose_name_plural': 'Growth Charts',
                'ordering': ['-measurement_date'],
            },
        ),
        migrations.CreateModel(
            name='DevelopmentalAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_date', models.DateField(verbose_name='Assessment Date')),
                ('age_in_months', models.PositiveIntegerField(verbose_name='Age in Months')),
                ('gross_motor_skills', models.TextField(blank=True, null=True, verbose_name='Gross Motor Skills')),
                ('fine_motor_skills', models.TextField(blank=True, null=True, verbose_name='Fine Motor Skills')),
                ('receptive_language', models.TextField(blank=True, null=True, verbose_name='Receptive Language')),
                ('expressive_language', models.TextField(blank=True, null=True, verbose_name='Expressive Language')),
                ('social_skills', models.TextField(blank=True, null=True, verbose_name='Social Skills')),
                ('emotional_development', models.TextField(blank=True, null=True, verbose_name='Emotional Development')),
                ('cognitive_skills', models.TextField(blank=True, null=True, verbose_name='Cognitive Skills')),
                ('problem_solving', models.TextField(blank=True, null=True, verbose_name='Problem Solving')),
                ('assessment_tools', models.TextField(blank=True, null=True, verbose_name='Assessment Tools Used')),
                ('development_status', models.CharField(choices=[('NORMAL', 'Normal Development'), ('DELAYED', 'Delayed Development'), ('ADVANCED', 'Advanced Development'), ('MIXED', 'Mixed Development')], max_length=20, verbose_name='Development Status')),
                ('concerns', models.TextField(blank=True, null=True, verbose_name='Concerns')),
                ('recommendations', models.TextField(blank=True, null=True, verbose_name='Recommendations')),
                ('follow_up_required', models.BooleanField(default=False, verbose_name='Follow-up Required')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Follow-up Date')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='developmental_assessments', to='acs_hms_base.hmsuser')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='developmental_assessments', to='acs_hms_paediatric.pediatricpatient')),
            ],
            options={
                'verbose_name': 'Developmental Assessment',
                'verbose_name_plural': 'Developmental Assessments',
                'ordering': ['-assessment_date'],
            },
        ),
        migrations.CreateModel(
            name='VaccinationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vaccine_type', models.CharField(choices=[('BCG', 'BCG'), ('HEPATITIS_B', 'Hepatitis B'), ('POLIO_OPV', 'Polio (OPV)'), ('POLIO_IPV', 'Polio (IPV)'), ('DTP', 'DTP'), ('PENTAVALENT', 'Pentavalent'), ('HIB', 'Haemophilus influenzae type b'), ('PNEUMOCOCCAL', 'Pneumococcal'), ('ROTAVIRUS', 'Rotavirus'), ('MEASLES', 'Measles'), ('MMR', 'MMR'), ('VARICELLA', 'Varicella'), ('HEPATITIS_A', 'Hepatitis A'), ('TYPHOID', 'Typhoid'), ('MENINGOCOCCAL', 'Meningococcal'), ('HPV', 'HPV'), ('INFLUENZA', 'Influenza'), ('COVID19', 'COVID-19')], max_length=20, verbose_name='Vaccine Type')),
                ('dose_number', models.PositiveIntegerField(verbose_name='Dose Number')),
                ('vaccination_date', models.DateField(verbose_name='Vaccination Date')),
                ('age_given', models.PositiveIntegerField(verbose_name='Age Given (months)')),
                ('vaccine_brand', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vaccine Brand')),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Batch Number')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('site_of_injection', models.CharField(blank=True, max_length=50, null=True, verbose_name='Site of Injection')),
                ('adverse_events', models.TextField(blank=True, null=True, verbose_name='Adverse Events')),
                ('next_dose_due', models.DateField(blank=True, null=True, verbose_name='Next Dose Due')),
                ('administered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='administered_vaccines', to='acs_hms_base.hmsuser')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vaccination_records', to='acs_hms_paediatric.pediatricpatient')),
            ],
            options={
                'verbose_name': 'Vaccination Record',
                'verbose_name_plural': 'Vaccination Records',
                'ordering': ['-vaccination_date'],
                'unique_together': {('patient', 'vaccine_type', 'dose_number')},
            },
        ),
    ]
