# Generated by Django 4.2.23 on 2025-07-12 05:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('acs_hms_base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AestheticConsultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultation_number', models.CharField(max_length=20, unique=True, verbose_name='Consultation Number')),
                ('consultation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Consultation Date')),
                ('chief_complaint', models.TextField(verbose_name='Chief Complaint')),
                ('aesthetic_goals', models.TextField(verbose_name='Aesthetic Goals')),
                ('previous_treatments', models.TextField(blank=True, null=True, verbose_name='Previous Aesthetic Treatments')),
                ('allergies', models.TextField(blank=True, null=True, verbose_name='Allergies')),
                ('current_medications', models.TextField(blank=True, null=True, verbose_name='Current Medications')),
                ('medical_conditions', models.TextField(blank=True, null=True, verbose_name='Medical Conditions')),
                ('skin_type', models.CharField(blank=True, choices=[('TYPE1', 'Type I (Very Fair)'), ('TYPE2', 'Type II (Fair)'), ('TYPE3', 'Type III (Medium)'), ('TYPE4', 'Type IV (Olive)'), ('TYPE5', 'Type V (Brown)'), ('TYPE6', 'Type VI (Black)')], max_length=20, null=True, verbose_name='Skin Type')),
                ('skin_condition', models.TextField(blank=True, null=True, verbose_name='Skin Condition Assessment')),
                ('problem_areas', models.TextField(blank=True, null=True, verbose_name='Problem Areas')),
                ('treatment_plan', models.TextField(blank=True, null=True, verbose_name='Treatment Plan')),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Estimated Cost')),
                ('before_photos', models.BooleanField(default=False, verbose_name='Before Photos Taken')),
                ('photo_consent', models.BooleanField(default=False, verbose_name='Photo Consent Given')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Follow-up Date')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Additional Notes')),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aesthetic_consultations', to='acs_hms_base.hmsuser')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aesthetic_consultations', to='acs_hms_base.patient')),
            ],
            options={
                'verbose_name': 'Aesthetic Consultation',
                'verbose_name_plural': 'Aesthetic Consultations',
                'ordering': ['-consultation_date'],
            },
        ),
        migrations.CreateModel(
            name='AestheticProcedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('procedure_number', models.CharField(max_length=20, unique=True, verbose_name='Procedure Number')),
                ('scheduled_date', models.DateTimeField(verbose_name='Scheduled Date')),
                ('actual_start_time', models.DateTimeField(blank=True, null=True, verbose_name='Actual Start Time')),
                ('actual_end_time', models.DateTimeField(blank=True, null=True, verbose_name='Actual End Time')),
                ('pre_procedure_assessment', models.TextField(blank=True, null=True, verbose_name='Pre-procedure Assessment')),
                ('consent_obtained', models.BooleanField(default=False, verbose_name='Consent Obtained')),
                ('procedure_notes', models.TextField(blank=True, null=True, verbose_name='Procedure Notes')),
                ('products_used', models.TextField(blank=True, null=True, verbose_name='Products Used')),
                ('technique_used', models.TextField(blank=True, null=True, verbose_name='Technique Used')),
                ('session_number', models.PositiveIntegerField(default=1, verbose_name='Session Number')),
                ('total_planned_sessions', models.PositiveIntegerField(default=1, verbose_name='Total Planned Sessions')),
                ('immediate_results', models.TextField(blank=True, null=True, verbose_name='Immediate Results')),
                ('complications', models.TextField(blank=True, null=True, verbose_name='Complications')),
                ('patient_satisfaction', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Patient Satisfaction (1-10)')),
                ('post_procedure_instructions', models.TextField(blank=True, null=True, verbose_name='Post-procedure Instructions')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Follow-up Date')),
                ('procedure_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Procedure Cost')),
                ('discount_applied', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Discount Applied')),
                ('final_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Final Cost')),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('POSTPONED', 'Postponed')], default='SCHEDULED', max_length=20, verbose_name='Status')),
                ('assistant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assisted_aesthetic_procedures', to='acs_hms_base.hmsuser')),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procedures', to='acs_hms_aesthetic.aestheticconsultation')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aesthetic_procedures', to='acs_hms_base.patient')),
                ('primary_practitioner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_aesthetic_procedures', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Aesthetic Procedure',
                'verbose_name_plural': 'Aesthetic Procedures',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='AestheticProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=200, verbose_name='Product Name')),
                ('product_code', models.CharField(max_length=20, unique=True, verbose_name='Product Code')),
                ('brand', models.CharField(max_length=100, verbose_name='Brand')),
                ('product_type', models.CharField(choices=[('INJECTABLE', 'Injectable'), ('TOPICAL', 'Topical'), ('DEVICE_CONSUMABLE', 'Device Consumable'), ('SKINCARE', 'Skincare Product'), ('SUPPLEMENT', 'Supplement'), ('EQUIPMENT', 'Equipment')], max_length=20, verbose_name='Product Type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('ingredients', models.TextField(blank=True, null=True, verbose_name='Ingredients')),
                ('concentration', models.CharField(blank=True, max_length=100, null=True, verbose_name='Concentration')),
                ('indications', models.TextField(blank=True, null=True, verbose_name='Indications')),
                ('contraindications', models.TextField(blank=True, null=True, verbose_name='Contraindications')),
                ('usage_instructions', models.TextField(blank=True, null=True, verbose_name='Usage Instructions')),
                ('unit_size', models.CharField(max_length=50, verbose_name='Unit Size')),
                ('cost_per_unit', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost per Unit')),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Selling Price')),
                ('current_stock', models.PositiveIntegerField(default=0, verbose_name='Current Stock')),
                ('minimum_stock', models.PositiveIntegerField(default=10, verbose_name='Minimum Stock Level')),
                ('storage_requirements', models.TextField(blank=True, null=True, verbose_name='Storage Requirements')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('supplier', models.CharField(blank=True, max_length=200, null=True, verbose_name='Supplier')),
                ('supplier_contact', models.CharField(blank=True, max_length=200, null=True, verbose_name='Supplier Contact')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Aesthetic Product',
                'verbose_name_plural': 'Aesthetic Products',
                'ordering': ['product_name'],
            },
        ),
        migrations.CreateModel(
            name='AestheticTreatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatment_name', models.CharField(max_length=200, verbose_name='Treatment Name')),
                ('treatment_code', models.CharField(max_length=20, unique=True, verbose_name='Treatment Code')),
                ('category', models.CharField(choices=[('FACIAL', 'Facial Treatments'), ('BODY_CONTOURING', 'Body Contouring'), ('SKIN_REJUVENATION', 'Skin Rejuvenation'), ('ANTI_AGING', 'Anti-Aging'), ('HAIR_REMOVAL', 'Hair Removal'), ('SCAR_TREATMENT', 'Scar Treatment'), ('PIGMENTATION', 'Pigmentation Treatment'), ('BOTOX', 'Botox Injections'), ('FILLERS', 'Dermal Fillers'), ('CHEMICAL_PEEL', 'Chemical Peels')], max_length=20, verbose_name='Category')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('duration_minutes', models.PositiveIntegerField(verbose_name='Duration (Minutes)')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Base Price')),
                ('preparation_instructions', models.TextField(blank=True, null=True, verbose_name='Preparation Instructions')),
                ('aftercare_instructions', models.TextField(blank=True, null=True, verbose_name='Aftercare Instructions')),
                ('contraindications', models.TextField(blank=True, null=True, verbose_name='Contraindications')),
                ('recommended_sessions', models.PositiveIntegerField(default=1, verbose_name='Recommended Sessions')),
                ('interval_between_sessions', models.PositiveIntegerField(blank=True, null=True, verbose_name='Interval Between Sessions (Days)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Aesthetic Treatment',
                'verbose_name_plural': 'Aesthetic Treatments',
                'ordering': ['treatment_name'],
            },
        ),
        migrations.CreateModel(
            name='PatientPhotoRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo_type', models.CharField(choices=[('BEFORE', 'Before Treatment'), ('DURING', 'During Treatment'), ('AFTER', 'After Treatment'), ('FOLLOW_UP', 'Follow-up'), ('COMPLICATION', 'Complication Documentation')], max_length=20, verbose_name='Photo Type')),
                ('anatomical_area', models.CharField(choices=[('FACE_FULL', 'Full Face'), ('FACE_PROFILE', 'Face Profile'), ('FOREHEAD', 'Forehead'), ('EYES', 'Eyes'), ('NOSE', 'Nose'), ('CHEEKS', 'Cheeks'), ('LIPS', 'Lips'), ('NECK', 'Neck'), ('CHEST', 'Chest'), ('ARMS', 'Arms'), ('LEGS', 'Legs'), ('BACK', 'Back'), ('OTHER', 'Other')], max_length=20, verbose_name='Anatomical Area')),
                ('photo_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Photo Date')),
                ('photo_file', models.ImageField(upload_to='aesthetic_photos/', verbose_name='Photo File')),
                ('photo_description', models.TextField(blank=True, null=True, verbose_name='Photo Description')),
                ('consent_obtained', models.BooleanField(default=False, verbose_name='Consent Obtained')),
                ('use_for_marketing', models.BooleanField(default=False, verbose_name='Use for Marketing')),
                ('use_for_education', models.BooleanField(default=False, verbose_name='Use for Education')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_records', to='acs_hms_base.patient')),
                ('procedure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='photos', to='acs_hms_aesthetic.aestheticprocedure')),
                ('taken_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taken_photos', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Patient Photo Record',
                'verbose_name_plural': 'Patient Photo Records',
                'ordering': ['-photo_date'],
            },
        ),
        migrations.AddField(
            model_name='aestheticprocedure',
            name='treatment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procedures', to='acs_hms_aesthetic.aesthetictreatment'),
        ),
        migrations.CreateModel(
            name='AestheticEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_name', models.CharField(max_length=200, verbose_name='Equipment Name')),
                ('equipment_type', models.CharField(choices=[('LASER', 'Laser Equipment'), ('IPL', 'IPL Equipment'), ('RADIOFREQUENCY', 'Radio Frequency'), ('ULTRASOUND', 'Ultrasound'), ('CRYOTHERAPY', 'Cryotherapy'), ('MICRODERMABRASION', 'Microdermabrasion'), ('LED_THERAPY', 'LED Therapy'), ('MICRONEEDLING', 'Microneedling Device'), ('VACUUM_THERAPY', 'Vacuum Therapy'), ('GENERAL', 'General Equipment')], max_length=20, verbose_name='Equipment Type')),
                ('brand', models.CharField(max_length=100, verbose_name='Brand')),
                ('model', models.CharField(max_length=100, verbose_name='Model')),
                ('serial_number', models.CharField(max_length=100, unique=True, verbose_name='Serial Number')),
                ('purchase_date', models.DateField(verbose_name='Purchase Date')),
                ('purchase_cost', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Purchase Cost')),
                ('supplier', models.CharField(max_length=200, verbose_name='Supplier')),
                ('warranty_expiry', models.DateField(blank=True, null=True, verbose_name='Warranty Expiry')),
                ('location', models.CharField(max_length=200, verbose_name='Location')),
                ('last_maintenance', models.DateField(blank=True, null=True, verbose_name='Last Maintenance')),
                ('next_maintenance', models.DateField(blank=True, null=True, verbose_name='Next Maintenance')),
                ('maintenance_interval_days', models.PositiveIntegerField(default=90, verbose_name='Maintenance Interval (Days)')),
                ('last_calibration', models.DateField(blank=True, null=True, verbose_name='Last Calibration')),
                ('next_calibration', models.DateField(blank=True, null=True, verbose_name='Next Calibration')),
                ('calibration_interval_days', models.PositiveIntegerField(default=365, verbose_name='Calibration Interval (Days)')),
                ('total_usage_hours', models.PositiveIntegerField(default=0, verbose_name='Total Usage Hours')),
                ('shots_fired', models.PositiveIntegerField(default=0, verbose_name='Shots Fired (for laser equipment)')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('MAINTENANCE', 'Under Maintenance'), ('REPAIR', 'Under Repair'), ('CALIBRATION', 'Under Calibration'), ('RETIRED', 'Retired')], default='ACTIVE', max_length=20, verbose_name='Status')),
                ('specifications', models.TextField(blank=True, null=True, verbose_name='Specifications')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_aesthetic_equipment', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Aesthetic Equipment',
                'verbose_name_plural': 'Aesthetic Equipment',
                'ordering': ['equipment_name'],
            },
        ),
        migrations.AddField(
            model_name='aestheticconsultation',
            name='recommended_treatments',
            field=models.ManyToManyField(blank=True, related_name='consultations', to='acs_hms_aesthetic.aesthetictreatment'),
        ),
    ]
