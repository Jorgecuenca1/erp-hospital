# Generated by Django 4.2.23 on 2025-07-12 05:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('acs_hms_base', '0001_initial'),
        ('acs_hms_hospitalization', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LabEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Equipment Name')),
                ('model', models.CharField(max_length=100, verbose_name='Model')),
                ('manufacturer', models.CharField(max_length=100, verbose_name='Manufacturer')),
                ('serial_number', models.CharField(max_length=100, unique=True, verbose_name='Serial Number')),
                ('location', models.CharField(max_length=200, verbose_name='Location')),
                ('specifications', models.TextField(blank=True, null=True, verbose_name='Specifications')),
                ('installation_date', models.DateField(verbose_name='Installation Date')),
                ('last_maintenance_date', models.DateField(blank=True, null=True, verbose_name='Last Maintenance Date')),
                ('next_maintenance_date', models.DateField(blank=True, null=True, verbose_name='Next Maintenance Date')),
                ('warranty_expiry', models.DateField(blank=True, null=True, verbose_name='Warranty Expiry')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('MAINTENANCE', 'Under Maintenance'), ('REPAIR', 'Under Repair'), ('RETIRED', 'Retired')], default='ACTIVE', max_length=20, verbose_name='Status')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_equipment', to='acs_hms_base.department')),
            ],
            options={
                'verbose_name': 'Lab Equipment',
                'verbose_name_plural': 'Lab Equipment',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LabTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Test Name')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Test Code')),
                ('test_type', models.CharField(choices=[('BLOOD', 'Blood Test'), ('URINE', 'Urine Test'), ('STOOL', 'Stool Test'), ('CULTURE', 'Culture'), ('BIOCHEMISTRY', 'Biochemistry'), ('HEMATOLOGY', 'Hematology'), ('IMMUNOLOGY', 'Immunology'), ('MICROBIOLOGY', 'Microbiology'), ('PATHOLOGY', 'Pathology'), ('RADIOLOGY', 'Radiology'), ('MOLECULAR', 'Molecular'), ('GENETIC', 'Genetic')], max_length=20, verbose_name='Test Type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('sample_type', models.CharField(max_length=100, verbose_name='Sample Type')),
                ('sample_volume', models.CharField(blank=True, max_length=50, null=True, verbose_name='Sample Volume')),
                ('container_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Container Type')),
                ('special_instructions', models.TextField(blank=True, null=True, verbose_name='Special Instructions')),
                ('reference_range', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reference Range')),
                ('units', models.CharField(blank=True, max_length=50, null=True, verbose_name='Units')),
                ('normal_range_min', models.FloatField(blank=True, null=True, verbose_name='Normal Range Min')),
                ('normal_range_max', models.FloatField(blank=True, null=True, verbose_name='Normal Range Max')),
                ('processing_time', models.DurationField(verbose_name='Processing Time')),
                ('requires_fasting', models.BooleanField(default=False, verbose_name='Requires Fasting')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_outsourced', models.BooleanField(default=False, verbose_name='Outsourced')),
            ],
            options={
                'verbose_name': 'Lab Test',
                'verbose_name_plural': 'Lab Tests',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LabTestCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Category Name')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Category Code')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Lab Test Category',
                'verbose_name_plural': 'Lab Test Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LabTestOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=20, unique=True, verbose_name='Order Number')),
                ('order_date', models.DateTimeField(auto_now_add=True, verbose_name='Order Date')),
                ('clinical_notes', models.TextField(blank=True, null=True, verbose_name='Clinical Notes')),
                ('diagnosis', models.TextField(blank=True, null=True, verbose_name='Diagnosis')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SAMPLE_COLLECTED', 'Sample Collected'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20, verbose_name='Status')),
                ('priority', models.CharField(choices=[('ROUTINE', 'Routine'), ('URGENT', 'Urgent'), ('STAT', 'STAT'), ('ASAP', 'ASAP')], default='ROUTINE', max_length=10, verbose_name='Priority')),
                ('sample_collected_date', models.DateTimeField(blank=True, null=True, verbose_name='Sample Collected Date')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total Amount')),
                ('insurance_covered', models.BooleanField(default=False, verbose_name='Insurance Covered')),
                ('admission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lab_orders', to='acs_hms_hospitalization.admission')),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lab_orders', to='acs_hms_base.appointment')),
                ('collected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collected_samples', to='acs_hms_base.hmsuser')),
                ('medical_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lab_orders', to='acs_hms_base.medicalrecord')),
                ('ordered_by', models.ForeignKey(limit_choices_to={'user_type': 'DOCTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='ordered_lab_tests', to='acs_hms_base.hmsuser')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_orders', to='acs_hms_base.patient')),
            ],
            options={
                'verbose_name': 'Lab Test Order',
                'verbose_name_plural': 'Lab Test Orders',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='LabWorkshift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift_date', models.DateField(verbose_name='Shift Date')),
                ('shift_type', models.CharField(choices=[('MORNING', 'Morning'), ('AFTERNOON', 'Afternoon'), ('EVENING', 'Evening'), ('NIGHT', 'Night')], max_length=20, verbose_name='Shift Type')),
                ('start_time', models.TimeField(verbose_name='Start Time')),
                ('end_time', models.TimeField(verbose_name='End Time')),
                ('samples_processed', models.PositiveIntegerField(default=0, verbose_name='Samples Processed')),
                ('tests_completed', models.PositiveIntegerField(default=0, verbose_name='Tests Completed')),
                ('shift_notes', models.TextField(blank=True, null=True, verbose_name='Shift Notes')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supervised_shifts', to='acs_hms_base.hmsuser')),
                ('technicians', models.ManyToManyField(limit_choices_to={'user_type': 'LABORATORY_TECHNICIAN'}, related_name='lab_shifts', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Lab Work Shift',
                'verbose_name_plural': 'Lab Work Shifts',
                'ordering': ['-shift_date', '-start_time'],
            },
        ),
        migrations.CreateModel(
            name='LabTestOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Unit Price')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total Price')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SAMPLE_COLLECTED', 'Sample Collected'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20, verbose_name='Status')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_items', to='acs_hms_laboratory.labtestorder')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='acs_hms_laboratory.labtest')),
            ],
            options={
                'verbose_name': 'Lab Test Order Item',
                'verbose_name_plural': 'Lab Test Order Items',
                'unique_together': {('order', 'test')},
            },
        ),
        migrations.AddField(
            model_name='labtest',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='acs_hms_laboratory.labtestcategory'),
        ),
        migrations.CreateModel(
            name='LabSample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_number', models.CharField(max_length=20, unique=True, verbose_name='Sample Number')),
                ('sample_type', models.CharField(max_length=100, verbose_name='Sample Type')),
                ('collection_date', models.DateTimeField(verbose_name='Collection Date')),
                ('collection_notes', models.TextField(blank=True, null=True, verbose_name='Collection Notes')),
                ('volume', models.CharField(blank=True, max_length=50, null=True, verbose_name='Volume')),
                ('container_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Container Type')),
                ('received_date', models.DateTimeField(blank=True, null=True, verbose_name='Received Date')),
                ('quality_acceptable', models.BooleanField(default=True, verbose_name='Quality Acceptable')),
                ('quality_notes', models.TextField(blank=True, null=True, verbose_name='Quality Notes')),
                ('status', models.CharField(choices=[('COLLECTED', 'Collected'), ('RECEIVED', 'Received'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('REJECTED', 'Rejected'), ('LOST', 'Lost')], default='COLLECTED', max_length=20, verbose_name='Status')),
                ('collected_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collected_lab_samples', to='acs_hms_base.hmsuser')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='acs_hms_laboratory.labtestorder')),
                ('received_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_lab_samples', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Lab Sample',
                'verbose_name_plural': 'Lab Samples',
                'ordering': ['-collection_date'],
            },
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_value', models.TextField(blank=True, null=True, verbose_name='Result Value')),
                ('numeric_value', models.FloatField(blank=True, null=True, verbose_name='Numeric Value')),
                ('result_text', models.TextField(blank=True, null=True, verbose_name='Result Text')),
                ('reference_range', models.CharField(blank=True, max_length=200, null=True, verbose_name='Reference Range')),
                ('units', models.CharField(blank=True, max_length=50, null=True, verbose_name='Units')),
                ('abnormal_flag', models.BooleanField(default=False, verbose_name='Abnormal Flag')),
                ('critical_flag', models.BooleanField(default=False, verbose_name='Critical Flag')),
                ('test_date', models.DateTimeField(verbose_name='Test Date')),
                ('validated_date', models.DateTimeField(blank=True, null=True, verbose_name='Validated Date')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PRELIMINARY', 'Preliminary'), ('FINAL', 'Final'), ('AMENDED', 'Amended'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20, verbose_name='Status')),
                ('technician_comments', models.TextField(blank=True, null=True, verbose_name='Technician Comments')),
                ('pathologist_comments', models.TextField(blank=True, null=True, verbose_name='Pathologist Comments')),
                ('equipment_used', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='test_results', to='acs_hms_laboratory.labequipment')),
                ('order_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='acs_hms_laboratory.labtestorderitem')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='acs_hms_laboratory.labsample')),
                ('tested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tested_results', to='acs_hms_base.hmsuser')),
                ('validated_by', models.ForeignKey(blank=True, limit_choices_to={'user_type__in': ['DOCTOR', 'LABORATORY_TECHNICIAN']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_results', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Lab Result',
                'verbose_name_plural': 'Lab Results',
                'ordering': ['-test_date'],
            },
        ),
        migrations.CreateModel(
            name='LabReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_number', models.CharField(max_length=20, unique=True, verbose_name='Report Number')),
                ('generated_date', models.DateTimeField(auto_now_add=True, verbose_name='Generated Date')),
                ('report_summary', models.TextField(blank=True, null=True, verbose_name='Report Summary')),
                ('interpretation', models.TextField(blank=True, null=True, verbose_name='Interpretation')),
                ('recommendations', models.TextField(blank=True, null=True, verbose_name='Recommendations')),
                ('reviewed_date', models.DateTimeField(blank=True, null=True, verbose_name='Reviewed Date')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('FINAL', 'Final'), ('DELIVERED', 'Delivered')], default='DRAFT', max_length=20, verbose_name='Status')),
                ('delivery_date', models.DateTimeField(blank=True, null=True, verbose_name='Delivery Date')),
                ('delivery_method', models.CharField(blank=True, max_length=50, null=True, verbose_name='Delivery Method')),
                ('delivered_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delivered_reports', to='acs_hms_base.hmsuser')),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to='acs_hms_base.hmsuser')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='acs_hms_laboratory.labtestorder')),
                ('reviewed_by', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'DOCTOR'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_reports', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Lab Report',
                'verbose_name_plural': 'Lab Reports',
                'ordering': ['-generated_date'],
            },
        ),
        migrations.CreateModel(
            name='LabQualityControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qc_date', models.DateField(verbose_name='QC Date')),
                ('qc_type', models.CharField(choices=[('DAILY', 'Daily QC'), ('WEEKLY', 'Weekly QC'), ('MONTHLY', 'Monthly QC'), ('CALIBRATION', 'Calibration'), ('MAINTENANCE', 'Maintenance')], max_length=20, verbose_name='QC Type')),
                ('control_lot', models.CharField(blank=True, max_length=50, null=True, verbose_name='Control Lot')),
                ('expected_value', models.CharField(blank=True, max_length=100, null=True, verbose_name='Expected Value')),
                ('actual_value', models.CharField(blank=True, max_length=100, null=True, verbose_name='Actual Value')),
                ('passed', models.BooleanField(default=True, verbose_name='Passed')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('corrective_action_required', models.BooleanField(default=False, verbose_name='Corrective Action Required')),
                ('corrective_action_taken', models.TextField(blank=True, null=True, verbose_name='Corrective Action Taken')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_controls', to='acs_hms_laboratory.labequipment')),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performed_qcs', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Lab Quality Control',
                'verbose_name_plural': 'Lab Quality Controls',
                'ordering': ['-qc_date'],
            },
        ),
    ]
