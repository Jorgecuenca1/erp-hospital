# Generated by Django 4.2.23 on 2025-08-10 16:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('admision_recepcion', '0005_historiaclinica'),
    ]

    operations = [
        migrations.CreateModel(
            name='EvaluacionOcupacional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_evaluacion', models.CharField(choices=[('INGRESO', 'Evaluación de Ingreso'), ('PERIODICA', 'Evaluación Periódica'), ('RETIRO', 'Evaluación de Retiro'), ('REINTEGRO', 'Evaluación de Reintegro'), ('TRABAJO_ALTURAS', 'Trabajo en Alturas'), ('ESPACIOS_CONFINADOS', 'Espacios Confinados'), ('OTROS', 'Otros')], max_length=30, verbose_name='Tipo de Evaluación')),
                ('actividad_economica', models.TextField(blank=True, verbose_name='Actividad Económica')),
                ('estado_civil', models.CharField(blank=True, choices=[('SOLTERO', 'Soltero(a)'), ('CASADO', 'Casado(a)'), ('UNION_LIBRE', 'Unión Libre'), ('DIVORCIADO', 'Divorciado(a)'), ('VIUDO', 'Viudo(a)'), ('SEPARADO', 'Separado(a)')], max_length=20, verbose_name='Estado Civil')),
                ('nivel_educativo', models.CharField(blank=True, choices=[('PRIMARIA_INCOMPLETA', 'Primaria Incompleta'), ('PRIMARIA_COMPLETA', 'Primaria Completa'), ('SECUNDARIA_INCOMPLETA', 'Secundaria Incompleta'), ('SECUNDARIA_COMPLETA', 'Secundaria Completa'), ('TECNICO', 'Técnico'), ('TECNOLOGO', 'Tecnólogo'), ('UNIVERSITARIO', 'Universitario'), ('ESPECIALIZACION', 'Especialización'), ('MAESTRIA', 'Maestría'), ('DOCTORADO', 'Doctorado')], max_length=30, verbose_name='Nivel Educativo')),
                ('eps', models.CharField(blank=True, max_length=100, verbose_name='EPS')),
                ('afp', models.CharField(blank=True, max_length=100, verbose_name='AFP')),
                ('arl', models.CharField(blank=True, max_length=100, verbose_name='ARL')),
                ('tipo_sangre', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=5, verbose_name='Tipo de Sangre')),
                ('numero_hijos', models.PositiveIntegerField(blank=True, null=True, verbose_name='N° de Hijos')),
                ('ingresos_promedio', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Ingresos Promedio')),
                ('jornada_laboral', models.CharField(blank=True, choices=[('DIURNA', 'Diurna'), ('NOCTURNA', 'Nocturna'), ('MIXTA', 'Mixta'), ('ROTATIVA', 'Rotativa')], max_length=20, verbose_name='Jornada Laboral')),
                ('area_cargo', models.CharField(blank=True, max_length=200, verbose_name='Área del Cargo')),
                ('profesion_cargo', models.CharField(blank=True, max_length=200, verbose_name='Profesión o Cargo')),
                ('funciones_cargo', models.TextField(blank=True, verbose_name='Funciones del Cargo')),
                ('motivo_consulta', models.TextField(blank=True, verbose_name='Motivo de Consulta')),
                ('epp_casco', models.BooleanField(default=False, verbose_name='Casco')),
                ('epp_gorro', models.BooleanField(default=False, verbose_name='Gorro')),
                ('epp_respirador', models.BooleanField(default=False, verbose_name='Respirador')),
                ('epp_gafas', models.BooleanField(default=False, verbose_name='Gafas')),
                ('epp_peto', models.BooleanField(default=False, verbose_name='Peto')),
                ('epp_bata', models.BooleanField(default=False, verbose_name='Bata')),
                ('epp_overol', models.BooleanField(default=False, verbose_name='Overol')),
                ('epp_delantal_plomo', models.BooleanField(default=False, verbose_name='Delantal de Plomo')),
                ('epp_ropa_termica', models.BooleanField(default=False, verbose_name='Ropa Térmica')),
                ('epp_auditivos', models.BooleanField(default=False, verbose_name='Protección Auditiva')),
                ('epp_careta', models.BooleanField(default=False, verbose_name='Careta')),
                ('epp_tapabocas', models.BooleanField(default=False, verbose_name='Tapabocas')),
                ('epp_guantes', models.BooleanField(default=False, verbose_name='Guantes')),
                ('epp_cinturon', models.BooleanField(default=False, verbose_name='Cinturón')),
                ('epp_botas', models.BooleanField(default=False, verbose_name='Botas')),
                ('epp_polainas', models.BooleanField(default=False, verbose_name='Polainas')),
                ('epp_otros', models.CharField(blank=True, max_length=200, verbose_name='Otros EPP')),
                ('historia_antecedentes', models.TextField(blank=True, verbose_name='Historia de Antecedentes')),
                ('revision_sistemas', models.TextField(blank=True, verbose_name='Revisión por Sistemas y Hábitos')),
                ('signos_vitales', models.JSONField(blank=True, default=dict, verbose_name='Signos Vitales y Examen Físico')),
                ('anexo_alturas', models.TextField(blank=True, verbose_name='Anexo de Alturas')),
                ('anexo_osteomuscular', models.TextField(blank=True, verbose_name='Anexo Osteomuscular')),
                ('paraclinicos_diagnosticos', models.TextField(blank=True, verbose_name='Paraclínicos y Diagnósticos')),
                ('concepto_aptitud', models.TextField(blank=True, verbose_name='Concepto de Aptitud y Conducta')),
                ('ordenes_medicas', models.TextField(blank=True, verbose_name='Órdenes Médicas e Incapacidades')),
                ('evoluciones_notas', models.TextField(blank=True, verbose_name='Evoluciones y Notas Adicionales')),
                ('observaciones_adicionales', models.TextField(blank=True, verbose_name='Observaciones Adicionales a los Antecedentes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Evaluación Ocupacional',
                'verbose_name_plural': 'Evaluaciones Ocupacionales',
            },
        ),
        migrations.CreateModel(
            name='FichaClinica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_ficha', models.CharField(max_length=20, unique=True, verbose_name='N° Ficha')),
                ('tipo_ficha', models.CharField(choices=[('EVALUACION_OCUPACIONAL', 'Evaluación Ocupacional'), ('EXAMEN_VISUAL', 'Examen Visual'), ('AUDIOMETRIA', 'Audiometría'), ('ESPIROMETRIA', 'Espirometría'), ('OSTEOMUSCULAR', 'Osteomuscular'), ('HISTORIA_GENERAL', 'Historia Clínica General'), ('TERAPIA_FISICA', 'Terapia Física')], max_length=30, verbose_name='Tipo de Ficha')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Creación')),
                ('fecha_evaluacion', models.DateField(verbose_name='Fecha de Evaluación')),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('SIN_ATENCION', 'Sin Atención'), ('EN_PROCESO', 'En Proceso'), ('COMPLETADA', 'Completada'), ('CERRADA', 'Cerrada')], default='PENDIENTE', max_length=20, verbose_name='Estado')),
                ('numero_identificacion', models.CharField(max_length=20, verbose_name='N° Identificación')),
                ('tipo_documento', models.CharField(choices=[('CC', 'Cédula de Ciudadanía'), ('TI', 'Tarjeta de Identidad'), ('CE', 'Cédula de Extranjería'), ('PA', 'Pasaporte'), ('RC', 'Registro Civil'), ('MS', 'Menor sin Identificación'), ('AS', 'Adulto sin Identificación')], default='CC', max_length=10, verbose_name='Tipo Documento')),
                ('nombre_trabajador', models.CharField(max_length=200, verbose_name='Nombre del Trabajador')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1, verbose_name='Género')),
                ('edad', models.PositiveIntegerField(blank=True, null=True, verbose_name='Edad')),
                ('telefono', models.CharField(blank=True, max_length=20, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('direccion', models.TextField(blank=True, verbose_name='Dirección')),
                ('cargo', models.CharField(blank=True, max_length=100, verbose_name='Cargo')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creado Por')),
                ('empresa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admision_recepcion.empresa', verbose_name='Empresa')),
                ('historia_clinica', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admision_recepcion.historiaclinica', verbose_name='Historia Clínica')),
                ('municipio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admision_recepcion.municipio', verbose_name='Municipio')),
                ('orden_servicio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admision_recepcion.ordenservicio', verbose_name='Orden de Servicio')),
                ('profesional_evaluador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admision_recepcion.prestador', verbose_name='Profesional Evaluador')),
            ],
            options={
                'verbose_name': 'Ficha Clínica',
                'verbose_name_plural': 'Fichas Clínicas',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='ExposicionLaboral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_empresa', models.CharField(max_length=200, verbose_name='Nombre de la Empresa')),
                ('actividad_economica', models.CharField(blank=True, max_length=200, verbose_name='Actividad Económica')),
                ('cargo', models.CharField(max_length=200, verbose_name='Cargo')),
                ('factores_riesgo', models.TextField(verbose_name='Factores de Riesgo (GTC-45)')),
                ('tiempo_exposicion_anos', models.PositiveIntegerField(blank=True, null=True, verbose_name='Años de Exposición')),
                ('tiempo_exposicion_meses', models.PositiveIntegerField(blank=True, null=True, verbose_name='Meses de Exposición')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('evaluacion_ocupacional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exposiciones_laborales', to='admision_recepcion.evaluacionocupacional')),
                ('profesional', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admision_recepcion.prestador', verbose_name='Profesional')),
            ],
            options={
                'verbose_name': 'Exposición Laboral',
                'verbose_name_plural': 'Exposiciones Laborales',
            },
        ),
        migrations.AddField(
            model_name='evaluacionocupacional',
            name='ficha_clinica',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='evaluacion_ocupacional', to='admision_recepcion.fichaclinica'),
        ),
        migrations.CreateModel(
            name='EnfermedadLaboral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion_enfermedad', models.TextField(verbose_name='Descripción de la Enfermedad Laboral')),
                ('fecha_diagnostico', models.DateField(blank=True, null=True, verbose_name='Fecha del Diagnóstico')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('evaluacion_ocupacional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enfermedades_laborales', to='admision_recepcion.evaluacionocupacional')),
                ('profesional', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admision_recepcion.prestador', verbose_name='Profesional')),
            ],
            options={
                'verbose_name': 'Enfermedad Laboral',
                'verbose_name_plural': 'Enfermedades Laborales',
            },
        ),
        migrations.CreateModel(
            name='AntecedenteSistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_sistema', models.CharField(choices=[('CABEZA', 'Cabeza'), ('OJOS', 'Ojos'), ('OIDOS', 'Oídos'), ('NARIZ', 'Nariz'), ('BOCA', 'Boca'), ('GARGANTA', 'Garganta'), ('CUELLO', 'Cuello'), ('SISTEMA_ENDOCRINO', 'Sistema Endocrino'), ('SISTEMA_CIRCULATORIO', 'Sistema Circulatorio'), ('SISTEMA_RESPIRATORIO', 'Sistema Respiratorio'), ('SISTEMA_GASTROINTESTINAL', 'Sistema Gastrointestinal'), ('SISTEMA_GENITOURINARIO', 'Sistema Genitourinario'), ('SISTEMA_OSTEOMUSCULAR', 'Sistema Osteomuscular'), ('SISTEMA_NERVIOSO', 'Sistema Nervioso'), ('PSIQUIATRICO', 'Psiquiátrico'), ('PIEL_ANEXOS', 'Piel y Anexos')], max_length=30, verbose_name='Sistema')),
                ('patologicos', models.CharField(default='NIEGA', max_length=200, verbose_name='Patológicos')),
                ('quirurgicos', models.CharField(default='NIEGA', max_length=200, verbose_name='Quirúrgicos')),
                ('traumaticos', models.CharField(default='NIEGA', max_length=200, verbose_name='Traumáticos')),
                ('evaluacion_ocupacional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='antecedentes_sistemas', to='admision_recepcion.evaluacionocupacional')),
            ],
            options={
                'verbose_name': 'Antecedente por Sistema',
                'verbose_name_plural': 'Antecedentes por Sistemas',
            },
        ),
        migrations.CreateModel(
            name='AntecedentePersonal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_antecedente', models.CharField(choices=[('PATOLOGICOS', 'Patológicos'), ('QUIRURGICOS', 'Quirúrgicos'), ('TRAUMATICOS', 'Traumáticos'), ('FARMACOLOGICOS', 'Farmacológicos'), ('ALERGICOS', 'Alérgicos'), ('PSIQUIATRICOS', 'Psiquiátricos'), ('FOBIAS', 'Fobias'), ('OTROS', 'Otros')], max_length=20, verbose_name='Tipo de Antecedente')),
                ('diagnostico_observaciones', models.TextField(default='NO REFIERE', verbose_name='Diagnóstico / Observaciones')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('evaluacion_ocupacional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='antecedentes_personales', to='admision_recepcion.evaluacionocupacional')),
                ('profesional', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admision_recepcion.prestador', verbose_name='Profesional')),
            ],
            options={
                'verbose_name': 'Antecedente Personal',
                'verbose_name_plural': 'Antecedentes Personales',
            },
        ),
        migrations.CreateModel(
            name='AntecedenteFamiliar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patologia', models.CharField(choices=[('ASMA', 'Asma'), ('CANCER', 'Cáncer'), ('DIABETES', 'Diabetes'), ('ENFERMEDAD_CORONARIA', 'Enfermedad Coronaria'), ('ACCIDENTE_CEREBRO_VASCULAR', 'Accidente Cerebro Vascular'), ('HIPERTENSION_ARTERIAL', 'Hipertensión Arterial'), ('COLAGENOSIS', 'Colagenosis'), ('PATOLOGIAS_TIROIDEAS', 'Patologías Tiroideas'), ('OTROS', 'Otros')], max_length=30, verbose_name='Patología')),
                ('parentesco', models.CharField(choices=[('PADRE', 'Padre'), ('MADRE', 'Madre'), ('HERMANO', 'Hermano'), ('HERMANA', 'Hermana'), ('ABUELO_PATERNO', 'Abuelo Paterno'), ('ABUELA_PATERNA', 'Abuela Paterna'), ('ABUELO_MATERNO', 'Abuelo Materno'), ('ABUELA_MATERNA', 'Abuela Materna'), ('TIO', 'Tío'), ('TIA', 'Tía'), ('PRIMO', 'Primo'), ('PRIMA', 'Prima'), ('OTRO', 'Otro'), ('NO_REFIERE', 'No Refiere')], default='NO_REFIERE', max_length=20, verbose_name='Parentesco')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('evaluacion_ocupacional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='antecedentes_familiares', to='admision_recepcion.evaluacionocupacional')),
                ('profesional', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admision_recepcion.prestador', verbose_name='Profesional')),
            ],
            options={
                'verbose_name': 'Antecedente Familiar',
                'verbose_name_plural': 'Antecedentes Familiares',
            },
        ),
        migrations.CreateModel(
            name='AccidenteLaboral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_empresa', models.CharField(max_length=200, verbose_name='Nombre de la Empresa')),
                ('tipo_accidente', models.CharField(max_length=200, verbose_name='Tipo de Accidente')),
                ('fecha_accidente', models.DateField(blank=True, null=True, verbose_name='Fecha del Accidente')),
                ('parte_cuerpo_afectada', models.CharField(max_length=200, verbose_name='Parte del Cuerpo Afectada')),
                ('secuelas', models.TextField(blank=True, verbose_name='Secuelas')),
                ('dias_incapacidad', models.PositiveIntegerField(blank=True, null=True, verbose_name='Días de Incapacidad')),
                ('reportado_arl', models.BooleanField(default=False, verbose_name='Reportado en ARL')),
                ('atencion_recibida', models.TextField(blank=True, verbose_name='Atención Recibida')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('evaluacion_ocupacional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accidentes_laborales', to='admision_recepcion.evaluacionocupacional')),
                ('profesional', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admision_recepcion.prestador', verbose_name='Profesional')),
            ],
            options={
                'verbose_name': 'Accidente Laboral',
                'verbose_name_plural': 'Accidentes Laborales',
            },
        ),
        migrations.AddIndex(
            model_name='fichaclinica',
            index=models.Index(fields=['numero_identificacion'], name='admision_re_numero__98b62d_idx'),
        ),
        migrations.AddIndex(
            model_name='fichaclinica',
            index=models.Index(fields=['tipo_ficha', 'estado'], name='admision_re_tipo_fi_e12d80_idx'),
        ),
        migrations.AddIndex(
            model_name='fichaclinica',
            index=models.Index(fields=['empresa', 'fecha_evaluacion'], name='admision_re_empresa_76e4db_idx'),
        ),
        migrations.AddIndex(
            model_name='fichaclinica',
            index=models.Index(fields=['profesional_evaluador'], name='admision_re_profesi_19c46f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='antecedentesistema',
            unique_together={('evaluacion_ocupacional', 'nombre_sistema')},
        ),
        migrations.AlterUniqueTogether(
            name='antecedentepersonal',
            unique_together={('evaluacion_ocupacional', 'tipo_antecedente')},
        ),
        migrations.AlterUniqueTogether(
            name='antecedentefamiliar',
            unique_together={('evaluacion_ocupacional', 'patologia')},
        ),
    ]
