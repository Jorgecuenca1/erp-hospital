# Generated by Django 4.2.23 on 2025-08-10 16:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('admision_recepcion', '0008_audiometria_diagnosticoauditivo_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Espirometria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('producto', models.CharField(blank=True, max_length=200, verbose_name='Producto')),
                ('peso_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Peso (kg)')),
                ('talla_cm', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Talla (cm)')),
                ('imc', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Índice de masa corporal (IMC)')),
                ('fecha_ingreso_empresa', models.DateField(blank=True, null=True, verbose_name='Fecha Ingreso Empresa')),
                ('antiguedad_cargo_anos', models.PositiveIntegerField(blank=True, null=True, verbose_name='Antigüedad Cargo Actual (Años)')),
                ('antiguedad_cargo_meses', models.PositiveIntegerField(blank=True, null=True, verbose_name='Antigüedad Cargo Actual (Meses)')),
                ('funciones_cargo', models.TextField(blank=True, verbose_name='Funciones del Cargo')),
                ('eps', models.CharField(blank=True, max_length=100, verbose_name='EPS')),
                ('fecha_ultimo_examen', models.DateField(blank=True, null=True, verbose_name='Fecha último Examen')),
                ('resultado_anterior', models.CharField(default='NO APLICA', max_length=50, verbose_name='Resultado Anterior')),
                ('caracteristica_exposicion', models.TextField(blank=True, verbose_name='Característica Exposición')),
                ('riesgos_ocupacionales', models.TextField(blank=True, verbose_name='Riesgos Ocupacionales')),
                ('uso_mascarilla', models.BooleanField(default=False, verbose_name='Mascarilla')),
                ('uso_respirador', models.BooleanField(default=False, verbose_name='Respirador')),
                ('uso_otros_epp', models.BooleanField(default=False, verbose_name='Otros EPP')),
                ('otros_epp_cual', models.CharField(blank=True, max_length=200, verbose_name='¿Cuál?')),
                ('factor_polvo', models.BooleanField(default=False, verbose_name='Polvo')),
                ('factor_humos', models.BooleanField(default=False, verbose_name='Humos')),
                ('factor_gases', models.BooleanField(default=False, verbose_name='Gases')),
                ('factor_vapores', models.BooleanField(default=False, verbose_name='Vapores')),
                ('factor_neblinas', models.BooleanField(default=False, verbose_name='Neblinas')),
                ('tiempo_exposicion_anos', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tiempo Exposición (Años)')),
                ('tiempo_exposicion_meses', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tiempo Exposición (Meses)')),
                ('fuma_tabaco', models.BooleanField(default=False, verbose_name='¿Fuma cigarrillo, tabaco o pipa?')),
                ('fuma_cantidad', models.CharField(blank=True, max_length=50, verbose_name='Cantidad')),
                ('fuma_tiempo', models.CharField(blank=True, max_length=50, verbose_name='¿Hace cuánto tiempo?')),
                ('es_exfumador', models.BooleanField(default=False, verbose_name='¿Es exfumador?')),
                ('exfumador_cantidad', models.CharField(blank=True, max_length=50, verbose_name='Cantidad (exfumador)')),
                ('ano_dejo_fumar', models.PositiveIntegerField(blank=True, null=True, verbose_name='Año en que dejó de fumar')),
                ('practica_deporte', models.BooleanField(default=False, verbose_name='¿Practica algún deporte?')),
                ('deporte_horas_semana', models.CharField(blank=True, max_length=50, verbose_name='Horas/Semana')),
                ('deporte_cual', models.CharField(blank=True, max_length=100, verbose_name='¿Cuál deporte?')),
                ('cocina_lena', models.BooleanField(default=False, verbose_name='¿Cocina o cocinó con leña?')),
                ('lena_tiempo_exposicion', models.CharField(blank=True, max_length=50, verbose_name='Tiempo de exposición leña')),
                ('dificultad_respirar', models.BooleanField(default=False, verbose_name='Dificultad al respirar')),
                ('dificultad_esfuerzo_fisico', models.BooleanField(default=False, verbose_name='Con el esfuerzo físico')),
                ('tos_frecuente', models.BooleanField(default=False, verbose_name='Tos frecuente')),
                ('tos_con_esputo', models.BooleanField(default=False, verbose_name='Con esputo')),
                ('enfermedad_cardiaca', models.BooleanField(default=False, verbose_name='Enfermedad cardíaca')),
                ('enfermedad_cardiaca_cual', models.CharField(blank=True, max_length=200, verbose_name='¿Cuál enfermedad cardíaca?')),
                ('dolor_respirar', models.BooleanField(default=False, verbose_name='Dolor al respirar')),
                ('dolor_respirar_donde', models.CharField(blank=True, max_length=200, verbose_name='¿Dónde duele?')),
                ('alergia_respiratoria', models.BooleanField(default=False, verbose_name='Alergia respiratoria')),
                ('alergia_respiratoria_que', models.CharField(blank=True, max_length=200, verbose_name='¿A qué?')),
                ('asma', models.BooleanField(default=False, verbose_name='Asma')),
                ('asma_edad_ultima_crisis', models.CharField(blank=True, max_length=50, verbose_name='Edad última crisis')),
                ('otra_enfermedad_respiratoria', models.BooleanField(default=False, verbose_name='Otra enfermedad respiratoria')),
                ('otra_enfermedad_cual', models.CharField(blank=True, max_length=200, verbose_name='¿Cuál otra enfermedad?')),
                ('cvf_pre', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='CVF PRE (Lt)')),
                ('cvf_post', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='CVF POST (Lt)')),
                ('cvf_teor', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='CVF TEOR (Lt)')),
                ('cvf_observaciones', models.TextField(blank=True, verbose_name='CVF Observaciones')),
                ('vef1_pre', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='VEF1 PRE (Lt)')),
                ('vef1_post', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='VEF1 POST (Lt)')),
                ('vef1_teor', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='VEF1 TEOR (Lt)')),
                ('vef1_observaciones', models.TextField(blank=True, verbose_name='VEF1 Observaciones')),
                ('vef1_cvf_pre', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='VEF1/CVF(%) PRE')),
                ('vef1_cvf_post', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='VEF1/CVF(%) POST')),
                ('vef1_cvf_teor', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='VEF1/CVF(%) TEOR')),
                ('vef1_cvf_observaciones', models.TextField(blank=True, verbose_name='VEF1/CVF Observaciones')),
                ('fef_25_75_pre', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='FEF 25-75 PRE (Lt/SEG)')),
                ('fef_25_75_post', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='FEF 25-75 POST (Lt/SEG)')),
                ('fef_25_75_teor', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='FEF 25-75 TEOR (Lt/SEG)')),
                ('fef_25_75_observaciones', models.TextField(blank=True, verbose_name='FEF 25-75 Observaciones')),
                ('marca_espirometro', models.CharField(blank=True, max_length=200, verbose_name='Marca y referencia espirómetro utilizado')),
                ('fecha_ultima_calibracion', models.DateField(blank=True, null=True, verbose_name='F Última Calibración')),
                ('escala_interpretacion', models.CharField(choices=[('KNUDSON', 'Knudson'), ('ATS', 'ATS'), ('ERS', 'ERS'), ('NHANES', 'NHANES')], default='KNUDSON', max_length=20, verbose_name='Escala interpretación')),
                ('patron_funcional', models.CharField(blank=True, choices=[('NORMAL', 'Normal'), ('OBSTRUCTIVO', 'Obstructivo'), ('RESTRICTIVO', 'Restrictivo'), ('MIXTO', 'Mixto')], max_length=20, verbose_name='Patrón Funcional')),
                ('severidad', models.CharField(blank=True, choices=[('LEVE', 'Leve'), ('MODERADO', 'Moderado'), ('SEVERO', 'Severo'), ('MUY_SEVERO', 'Muy Severo')], max_length=20, verbose_name='Severidad')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('resultado_archivo', models.FileField(blank=True, null=True, upload_to='espirometrias/', verbose_name='Resultado del Espirómetro')),
                ('via_ingreso', models.CharField(default='01', max_length=10, verbose_name='Vía de Ingreso')),
                ('finalidad_consulta', models.CharField(default='15', max_length=10, verbose_name='Finalidad de la Consulta')),
                ('causa_externa', models.CharField(default='38', max_length=10, verbose_name='Causa Externa')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ficha_clinica', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='espirometria', to='admision_recepcion.fichaclinica')),
            ],
            options={
                'verbose_name': 'Espirometría',
                'verbose_name_plural': 'Espirometrías',
            },
        ),
        migrations.CreateModel(
            name='RecomendacionEspirometria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recomendacion', models.TextField(verbose_name='Recomendación')),
                ('tipo', models.CharField(choices=[('CONTROL', 'Control'), ('TRATAMIENTO', 'Tratamiento'), ('EXAMEN', 'Examen'), ('REMISION', 'Remisión'), ('PREVENCION', 'Prevención')], max_length=20, verbose_name='Tipo')),
                ('fecha', models.DateField(auto_now_add=True, verbose_name='Fecha')),
                ('espirometria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recomendaciones_espirometria', to='admision_recepcion.espirometria')),
            ],
            options={
                'verbose_name': 'Recomendación Espirometría',
                'verbose_name_plural': 'Recomendaciones Espirometría',
            },
        ),
    ]
