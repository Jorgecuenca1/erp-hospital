# Generated by Django 4.2.23 on 2025-07-12 03:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('acs_hms_base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GynecologyPatient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menarche_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Age at Menarche')),
                ('menopause_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Age at Menopause')),
                ('menstrual_cycle', models.CharField(blank=True, choices=[('REGULAR', 'Regular'), ('IRREGULAR', 'Irregular'), ('AMENORRHEA', 'Amenorrhea'), ('MENORRHAGIA', 'Menorrhagia'), ('OLIGOMENORRHEA', 'Oligomenorrhea')], max_length=20, null=True, verbose_name='Menstrual Cycle')),
                ('cycle_length', models.PositiveIntegerField(blank=True, null=True, verbose_name='Cycle Length (days)')),
                ('flow_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Flow Duration (days)')),
                ('last_menstrual_period', models.DateField(blank=True, null=True, verbose_name='Last Menstrual Period')),
                ('gravida', models.PositiveIntegerField(default=0, verbose_name='Gravida (G)')),
                ('para', models.PositiveIntegerField(default=0, verbose_name='Para (P)')),
                ('term_deliveries', models.PositiveIntegerField(default=0, verbose_name='Term Deliveries')),
                ('preterm_deliveries', models.PositiveIntegerField(default=0, verbose_name='Preterm Deliveries')),
                ('abortions', models.PositiveIntegerField(default=0, verbose_name='Abortions')),
                ('living_children', models.PositiveIntegerField(default=0, verbose_name='Living Children')),
                ('current_contraceptive', models.CharField(choices=[('NONE', 'None'), ('ORAL_PILL', 'Oral Contraceptive Pill'), ('IUD', 'Intrauterine Device'), ('CONDOM', 'Condom'), ('INJECTION', 'Injection'), ('IMPLANT', 'Implant'), ('STERILIZATION', 'Sterilization'), ('NATURAL', 'Natural Methods')], default='NONE', max_length=20, verbose_name='Current Contraceptive Method')),
                ('contraceptive_duration', models.CharField(blank=True, max_length=100, null=True, verbose_name='Contraceptive Duration')),
                ('last_pap_smear', models.DateField(blank=True, null=True, verbose_name='Last Pap Smear')),
                ('pap_smear_result', models.CharField(blank=True, max_length=100, null=True, verbose_name='Pap Smear Result')),
                ('last_mammogram', models.DateField(blank=True, null=True, verbose_name='Last Mammogram')),
                ('mammogram_result', models.CharField(blank=True, max_length=100, null=True, verbose_name='Mammogram Result')),
                ('surgical_history', models.TextField(blank=True, null=True, verbose_name='Gynecological Surgical History')),
                ('family_history', models.TextField(blank=True, null=True, verbose_name='Family History (Gynecological)')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gynecology_profile', to='acs_hms_base.patient')),
            ],
            options={
                'verbose_name': 'Gynecology Patient',
                'verbose_name_plural': 'Gynecology Patients',
            },
        ),
        migrations.CreateModel(
            name='Pregnancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pregnancy_number', models.PositiveIntegerField(verbose_name='Pregnancy Number')),
                ('last_menstrual_period', models.DateField(verbose_name='Last Menstrual Period')),
                ('expected_delivery_date', models.DateField(verbose_name='Expected Delivery Date')),
                ('actual_delivery_date', models.DateField(blank=True, null=True, verbose_name='Actual Delivery Date')),
                ('status', models.CharField(choices=[('ONGOING', 'Ongoing'), ('DELIVERED', 'Delivered'), ('ABORTED', 'Aborted'), ('ECTOPIC', 'Ectopic'), ('MOLAR', 'Molar')], default='ONGOING', max_length=20, verbose_name='Pregnancy Status')),
                ('gestational_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Gestational Age (weeks)')),
                ('high_risk', models.BooleanField(default=False, verbose_name='High Risk Pregnancy')),
                ('risk_factors', models.TextField(blank=True, null=True, verbose_name='Risk Factors')),
                ('delivery_type', models.CharField(blank=True, choices=[('NORMAL', 'Normal Vaginal Delivery'), ('CESAREAN', 'Cesarean Section'), ('FORCEPS', 'Forceps Delivery'), ('VACUUM', 'Vacuum Extraction')], max_length=20, null=True, verbose_name='Delivery Type')),
                ('birth_weight', models.FloatField(blank=True, null=True, verbose_name='Birth Weight (grams)')),
                ('complications', models.TextField(blank=True, null=True, verbose_name='Complications')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Updated Date')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pregnancies', to='acs_hms_gynec.gynecologypatient')),
            ],
            options={
                'verbose_name': 'Pregnancy',
                'verbose_name_plural': 'Pregnancies',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='MenopauseManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_date', models.DateField(verbose_name='Assessment Date')),
                ('menopause_status', models.CharField(choices=[('PREMENOPAUSAL', 'Premenopausal'), ('PERIMENOPAUSAL', 'Perimenopausal'), ('POSTMENOPAUSAL', 'Postmenopausal')], max_length=20, verbose_name='Menopause Status')),
                ('hot_flashes', models.BooleanField(default=False, verbose_name='Hot Flashes')),
                ('night_sweats', models.BooleanField(default=False, verbose_name='Night Sweats')),
                ('mood_changes', models.BooleanField(default=False, verbose_name='Mood Changes')),
                ('sleep_disturbances', models.BooleanField(default=False, verbose_name='Sleep Disturbances')),
                ('vaginal_dryness', models.BooleanField(default=False, verbose_name='Vaginal Dryness')),
                ('decreased_libido', models.BooleanField(default=False, verbose_name='Decreased Libido')),
                ('symptom_severity', models.CharField(choices=[('MILD', 'Mild'), ('MODERATE', 'Moderate'), ('SEVERE', 'Severe')], max_length=20, verbose_name='Symptom Severity')),
                ('quality_of_life_impact', models.TextField(blank=True, null=True, verbose_name='Quality of Life Impact')),
                ('treatment_type', models.CharField(choices=[('NONE', 'No Treatment'), ('LIFESTYLE', 'Lifestyle Modifications'), ('HRT', 'Hormone Replacement Therapy'), ('NON_HORMONAL', 'Non-hormonal Medications'), ('ALTERNATIVE', 'Alternative Therapies')], max_length=20, verbose_name='Treatment Type')),
                ('treatment_details', models.TextField(blank=True, null=True, verbose_name='Treatment Details')),
                ('bone_density_assessment', models.BooleanField(default=False, verbose_name='Bone Density Assessment Done')),
                ('cardiovascular_assessment', models.BooleanField(default=False, verbose_name='Cardiovascular Assessment Done')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Follow-up Date')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('doctor', models.ForeignKey(limit_choices_to={'user_type': 'DOCTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='menopause_assessments', to='acs_hms_base.hmsuser')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menopause_management', to='acs_hms_gynec.gynecologypatient')),
            ],
            options={
                'verbose_name': 'Menopause Management',
                'verbose_name_plural': 'Menopause Management',
                'ordering': ['-assessment_date'],
            },
        ),
        migrations.CreateModel(
            name='GynecologyProcedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('procedure_type', models.CharField(choices=[('COLPOSCOPY', 'Colposcopy'), ('HYSTEROSCOPY', 'Hysteroscopy'), ('LAPAROSCOPY', 'Laparoscopy'), ('DILATION_CURETTAGE', 'Dilation & Curettage'), ('ENDOMETRIAL_BIOPSY', 'Endometrial Biopsy'), ('CERVICAL_BIOPSY', 'Cervical Biopsy'), ('HYSTERECTOMY', 'Hysterectomy'), ('MYOMECTOMY', 'Myomectomy'), ('OOPHORECTOMY', 'Oophorectomy'), ('TUBAL_LIGATION', 'Tubal Ligation'), ('IUD_INSERTION', 'IUD Insertion'), ('IUD_REMOVAL', 'IUD Removal'), ('LOOP_ELECTROSURGICAL_EXCISION', 'LEEP'), ('CRYOTHERAPY', 'Cryotherapy')], max_length=50, verbose_name='Procedure Type')),
                ('procedure_date', models.DateField(verbose_name='Procedure Date')),
                ('indication', models.TextField(verbose_name='Indication')),
                ('procedure_details', models.TextField(blank=True, null=True, verbose_name='Procedure Details')),
                ('findings', models.TextField(blank=True, null=True, verbose_name='Findings')),
                ('complications', models.TextField(blank=True, null=True, verbose_name='Complications')),
                ('anesthesia_type', models.CharField(blank=True, choices=[('LOCAL', 'Local Anesthesia'), ('REGIONAL', 'Regional Anesthesia'), ('GENERAL', 'General Anesthesia'), ('NONE', 'No Anesthesia')], max_length=20, null=True, verbose_name='Anesthesia Type')),
                ('post_operative_instructions', models.TextField(blank=True, null=True, verbose_name='Post-operative Instructions')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Follow-up Date')),
                ('specimen_sent', models.BooleanField(default=False, verbose_name='Specimen Sent for Histopathology')),
                ('specimen_details', models.TextField(blank=True, null=True, verbose_name='Specimen Details')),
                ('pathology_report', models.TextField(blank=True, null=True, verbose_name='Pathology Report')),
                ('doctor', models.ForeignKey(limit_choices_to={'user_type': 'DOCTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='gynecology_procedures', to='acs_hms_base.hmsuser')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procedures', to='acs_hms_gynec.gynecologypatient')),
            ],
            options={
                'verbose_name': 'Gynecology Procedure',
                'verbose_name_plural': 'Gynecology Procedures',
                'ordering': ['-procedure_date'],
            },
        ),
        migrations.CreateModel(
            name='GynecologyMedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_genitalia', models.TextField(blank=True, null=True, verbose_name='External Genitalia')),
                ('vaginal_examination', models.TextField(blank=True, null=True, verbose_name='Vaginal Examination')),
                ('cervical_examination', models.TextField(blank=True, null=True, verbose_name='Cervical Examination')),
                ('bimanual_examination', models.TextField(blank=True, null=True, verbose_name='Bimanual Examination')),
                ('breast_examination', models.TextField(blank=True, null=True, verbose_name='Breast Examination')),
                ('vaginal_discharge', models.TextField(blank=True, null=True, verbose_name='Vaginal Discharge')),
                ('pelvic_pain', models.TextField(blank=True, null=True, verbose_name='Pelvic Pain')),
                ('menstrual_irregularities', models.TextField(blank=True, null=True, verbose_name='Menstrual Irregularities')),
                ('ultrasound_findings', models.TextField(blank=True, null=True, verbose_name='Ultrasound Findings')),
                ('laboratory_results', models.TextField(blank=True, null=True, verbose_name='Laboratory Results')),
                ('gynecological_diagnosis', models.TextField(blank=True, null=True, verbose_name='Gynecological Diagnosis')),
                ('hormonal_therapy', models.TextField(blank=True, null=True, verbose_name='Hormonal Therapy')),
                ('surgical_plan', models.TextField(blank=True, null=True, verbose_name='Surgical Plan')),
                ('gynecology_patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to='acs_hms_gynec.gynecologypatient')),
                ('medical_record', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gynecology_record', to='acs_hms_base.medicalrecord')),
            ],
            options={
                'verbose_name': 'Gynecology Medical Record',
                'verbose_name_plural': 'Gynecology Medical Records',
            },
        ),
        migrations.CreateModel(
            name='ContraceptiveConsultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultation_date', models.DateField(verbose_name='Consultation Date')),
                ('current_method', models.CharField(choices=[('NONE', 'None'), ('ORAL_PILL', 'Oral Contraceptive Pill'), ('IUD', 'Intrauterine Device'), ('CONDOM', 'Condom'), ('INJECTION', 'Injection'), ('IMPLANT', 'Implant'), ('STERILIZATION', 'Sterilization'), ('NATURAL', 'Natural Methods')], max_length=20, verbose_name='Current Method')),
                ('satisfaction_with_current', models.CharField(blank=True, max_length=100, null=True, verbose_name='Satisfaction with Current Method')),
                ('desired_method', models.CharField(choices=[('NONE', 'None'), ('ORAL_PILL', 'Oral Contraceptive Pill'), ('IUD', 'Intrauterine Device'), ('CONDOM', 'Condom'), ('INJECTION', 'Injection'), ('IMPLANT', 'Implant'), ('STERILIZATION', 'Sterilization'), ('NATURAL', 'Natural Methods')], max_length=20, verbose_name='Desired Method')),
                ('method_provided', models.CharField(choices=[('NONE', 'None'), ('ORAL_PILL', 'Oral Contraceptive Pill'), ('IUD', 'Intrauterine Device'), ('CONDOM', 'Condom'), ('INJECTION', 'Injection'), ('IMPLANT', 'Implant'), ('STERILIZATION', 'Sterilization'), ('NATURAL', 'Natural Methods')], max_length=20, verbose_name='Method Provided')),
                ('counseling_topics', models.TextField(verbose_name='Counseling Topics Discussed')),
                ('side_effects_discussed', models.TextField(blank=True, null=True, verbose_name='Side Effects Discussed')),
                ('follow_up_required', models.BooleanField(default=True, verbose_name='Follow-up Required')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Follow-up Date')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('doctor', models.ForeignKey(limit_choices_to={'user_type': 'DOCTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='contraceptive_consultations', to='acs_hms_base.hmsuser')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contraceptive_consultations', to='acs_hms_gynec.gynecologypatient')),
            ],
            options={
                'verbose_name': 'Contraceptive Consultation',
                'verbose_name_plural': 'Contraceptive Consultations',
                'ordering': ['-consultation_date'],
            },
        ),
        migrations.CreateModel(
            name='AntenatalVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_date', models.DateField(verbose_name='Visit Date')),
                ('gestational_age', models.PositiveIntegerField(verbose_name='Gestational Age (weeks)')),
                ('weight', models.FloatField(blank=True, null=True, verbose_name='Weight (kg)')),
                ('blood_pressure_systolic', models.PositiveIntegerField(blank=True, null=True, verbose_name='Blood Pressure (Systolic)')),
                ('blood_pressure_diastolic', models.PositiveIntegerField(blank=True, null=True, verbose_name='Blood Pressure (Diastolic)')),
                ('fundal_height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Fundal Height (cm)')),
                ('fetal_heart_rate', models.PositiveIntegerField(blank=True, null=True, verbose_name='Fetal Heart Rate')),
                ('fetal_movement', models.CharField(blank=True, max_length=50, null=True, verbose_name='Fetal Movement')),
                ('presentation', models.CharField(blank=True, max_length=50, null=True, verbose_name='Presentation')),
                ('hemoglobin', models.FloatField(blank=True, null=True, verbose_name='Hemoglobin (g/dL)')),
                ('urine_protein', models.CharField(blank=True, max_length=10, null=True, verbose_name='Urine Protein')),
                ('urine_glucose', models.CharField(blank=True, max_length=10, null=True, verbose_name='Urine Glucose')),
                ('ultrasound_done', models.BooleanField(default=False, verbose_name='Ultrasound Done')),
                ('estimated_fetal_weight', models.FloatField(blank=True, null=True, verbose_name='Estimated Fetal Weight (grams)')),
                ('amniotic_fluid', models.CharField(blank=True, max_length=50, null=True, verbose_name='Amniotic Fluid')),
                ('advice', models.TextField(blank=True, null=True, verbose_name='Advice')),
                ('next_visit_date', models.DateField(blank=True, null=True, verbose_name='Next Visit Date')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('doctor', models.ForeignKey(limit_choices_to={'user_type': 'DOCTOR'}, on_delete=django.db.models.deletion.CASCADE, related_name='antenatal_visits', to='acs_hms_base.hmsuser')),
                ('pregnancy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='antenatal_visits', to='acs_hms_gynec.pregnancy')),
            ],
            options={
                'verbose_name': 'Antenatal Visit',
                'verbose_name_plural': 'Antenatal Visits',
                'ordering': ['-visit_date'],
            },
        ),
    ]
