# Generated by Django 4.2.23 on 2025-07-12 05:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('acs_hms_base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BloodBankSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whole_blood_storage_temp', models.DecimalField(decimal_places=2, default=4.0, max_digits=5)),
                ('plasma_storage_temp', models.DecimalField(decimal_places=2, default=-18.0, max_digits=5)),
                ('platelet_storage_temp', models.DecimalField(decimal_places=2, default=22.0, max_digits=5)),
                ('whole_blood_shelf_life', models.IntegerField(default=35, help_text='Days')),
                ('packed_rbc_shelf_life', models.IntegerField(default=42, help_text='Days')),
                ('plasma_shelf_life', models.IntegerField(default=365, help_text='Days')),
                ('platelet_shelf_life', models.IntegerField(default=5, help_text='Days')),
                ('min_donation_interval', models.IntegerField(default=56, help_text='Days between donations')),
                ('min_donor_age', models.IntegerField(default=18)),
                ('max_donor_age', models.IntegerField(default=65)),
                ('min_donor_weight', models.DecimalField(decimal_places=2, default=50.0, max_digits=5)),
                ('min_hemoglobin', models.DecimalField(decimal_places=2, default=12.5, max_digits=4)),
                ('mandatory_tests', models.JSONField(blank=True, default=list)),
                ('low_stock_alert', models.IntegerField(default=5, help_text='Alert when units below this number')),
                ('expiry_alert_days', models.IntegerField(default=7, help_text='Alert days before expiry')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Blood Bank Settings',
                'verbose_name_plural': 'Blood Bank Settings',
            },
        ),
        migrations.CreateModel(
            name='BloodDonation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donation_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('donation_type', models.CharField(choices=[('whole_blood', 'Whole Blood'), ('plasma', 'Plasma'), ('platelets', 'Platelets'), ('red_cells', 'Red Blood Cells'), ('apheresis', 'Apheresis')], default='whole_blood', max_length=20)),
                ('donation_date', models.DateTimeField()),
                ('volume_collected', models.DecimalField(decimal_places=2, help_text='Volume in ml', max_digits=6)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('deferred', 'Deferred')], default='scheduled', max_length=20)),
                ('pre_screening_passed', models.BooleanField(default=False)),
                ('hemoglobin_level', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('blood_pressure_systolic', models.IntegerField(blank=True, null=True)),
                ('blood_pressure_diastolic', models.IntegerField(blank=True, null=True)),
                ('pulse_rate', models.IntegerField(blank=True, null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('weight_at_donation', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('collection_start_time', models.DateTimeField(blank=True, null=True)),
                ('collection_end_time', models.DateTimeField(blank=True, null=True)),
                ('collection_bag_number', models.CharField(blank=True, max_length=50)),
                ('adverse_reactions', models.TextField(blank=True)),
                ('reaction_severity', models.CharField(choices=[('none', 'None'), ('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe')], default='none', max_length=20)),
                ('post_donation_instructions', models.TextField(blank=True)),
                ('deferral_reason', models.TextField(blank=True)),
                ('next_eligible_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Blood Donation',
                'verbose_name_plural': 'Blood Donations',
                'ordering': ['-donation_date'],
            },
        ),
        migrations.CreateModel(
            name='BloodGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abo_type', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('AB', 'AB'), ('O', 'O')], max_length=2)),
                ('rh_factor', models.CharField(choices=[('positive', 'Positive'), ('negative', 'Negative')], max_length=8)),
            ],
            options={
                'verbose_name': 'Blood Group',
                'verbose_name_plural': 'Blood Groups',
                'ordering': ['abo_type', 'rh_factor'],
                'unique_together': {('abo_type', 'rh_factor')},
            },
        ),
        migrations.CreateModel(
            name='BloodIssuance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issuance_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('issued_date', models.DateTimeField()),
                ('cross_match_performed', models.BooleanField(default=True)),
                ('cross_match_result', models.CharField(choices=[('compatible', 'Compatible'), ('incompatible', 'Incompatible')], default='compatible', max_length=20)),
                ('transport_container', models.CharField(blank=True, max_length=100)),
                ('transport_temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('units_returned', models.IntegerField(default=0)),
                ('units_wasted', models.IntegerField(default=0)),
                ('wastage_reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Blood Issuance',
                'verbose_name_plural': 'Blood Issuances',
                'ordering': ['-issued_date'],
            },
        ),
        migrations.CreateModel(
            name='BloodUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('component', models.CharField(choices=[('whole_blood', 'Whole Blood'), ('packed_rbc', 'Packed Red Blood Cells'), ('platelets', 'Platelets'), ('plasma', 'Fresh Frozen Plasma'), ('cryoprecipitate', 'Cryoprecipitate'), ('albumin', 'Albumin'), ('immunoglobulin', 'Immunoglobulin')], default='whole_blood', max_length=20)),
                ('volume', models.DecimalField(decimal_places=2, help_text='Volume in ml', max_digits=6)),
                ('collection_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('collected', 'Collected'), ('processing', 'Processing'), ('tested', 'Tested'), ('available', 'Available'), ('reserved', 'Reserved'), ('issued', 'Issued'), ('expired', 'Expired'), ('discarded', 'Discarded')], default='collected', max_length=20)),
                ('testing_completed', models.BooleanField(default=False)),
                ('test_results', models.JSONField(blank=True, default=dict)),
                ('hiv_test', models.CharField(choices=[('pending', 'Pending'), ('negative', 'Negative'), ('positive', 'Positive'), ('indeterminate', 'Indeterminate')], default='pending', max_length=20)),
                ('hepatitis_b_test', models.CharField(choices=[('pending', 'Pending'), ('negative', 'Negative'), ('positive', 'Positive'), ('indeterminate', 'Indeterminate')], default='pending', max_length=20)),
                ('hepatitis_c_test', models.CharField(choices=[('pending', 'Pending'), ('negative', 'Negative'), ('positive', 'Positive'), ('indeterminate', 'Indeterminate')], default='pending', max_length=20)),
                ('syphilis_test', models.CharField(choices=[('pending', 'Pending'), ('negative', 'Negative'), ('positive', 'Positive'), ('indeterminate', 'Indeterminate')], default='pending', max_length=20)),
                ('storage_location', models.CharField(blank=True, max_length=100)),
                ('storage_temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('cross_match_result', models.CharField(blank=True, choices=[('pending', 'Pending'), ('compatible', 'Compatible'), ('incompatible', 'Incompatible')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('blood_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blood_units', to='acs_hms_blood_bank.bloodgroup')),
                ('cross_match_patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cross_matched_units', to='acs_hms_base.patient')),
                ('donation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blood_units', to='acs_hms_blood_bank.blooddonation')),
            ],
            options={
                'verbose_name': 'Blood Unit',
                'verbose_name_plural': 'Blood Units',
                'ordering': ['collection_date'],
            },
        ),
        migrations.CreateModel(
            name='BloodTransfusion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfusion_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('transfusion_type', models.CharField(choices=[('whole_blood', 'Whole Blood'), ('packed_rbc', 'Packed Red Blood Cells'), ('platelets', 'Platelets'), ('plasma', 'Fresh Frozen Plasma'), ('cryoprecipitate', 'Cryoprecipitate'), ('exchange', 'Exchange Transfusion')], default='packed_rbc', max_length=20)),
                ('volume_transfused', models.DecimalField(decimal_places=2, help_text='Volume in ml', max_digits=6)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('stopped', 'Stopped'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('pre_transfusion_vitals', models.JSONField(blank=True, default=dict)),
                ('transfusion_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Rate in ml/hr', max_digits=6, null=True)),
                ('post_transfusion_vitals', models.JSONField(blank=True, default=dict)),
                ('adverse_reactions', models.TextField(blank=True)),
                ('reaction_type', models.CharField(choices=[('none', 'None'), ('allergic', 'Allergic'), ('febrile', 'Febrile'), ('hemolytic', 'Hemolytic'), ('circulatory', 'Circulatory Overload'), ('other', 'Other')], default='none', max_length=20)),
                ('intervention_required', models.BooleanField(default=False)),
                ('intervention_details', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('administered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='administered_transfusions', to='acs_hms_base.hmsuser')),
                ('issuance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transfusions', to='acs_hms_blood_bank.bloodissuance')),
                ('monitored_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='monitored_transfusions', to='acs_hms_base.hmsuser')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blood_transfusions', to='acs_hms_base.patient')),
            ],
            options={
                'verbose_name': 'Blood Transfusion',
                'verbose_name_plural': 'Blood Transfusions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='BloodRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('component_required', models.CharField(choices=[('whole_blood', 'Whole Blood'), ('packed_rbc', 'Packed Red Blood Cells'), ('platelets', 'Platelets'), ('plasma', 'Fresh Frozen Plasma'), ('cryoprecipitate', 'Cryoprecipitate'), ('albumin', 'Albumin'), ('immunoglobulin', 'Immunoglobulin')], default='packed_rbc', max_length=20)),
                ('units_required', models.IntegerField(default=1)),
                ('indication', models.TextField()),
                ('hemoglobin_level', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('hematocrit', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('urgency', models.CharField(choices=[('routine', 'Routine'), ('urgent', 'Urgent'), ('emergency', 'Emergency')], default='routine', max_length=20)),
                ('required_by', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('partial', 'Partially Fulfilled'), ('fulfilled', 'Fulfilled'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('units_issued', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_blood_requests', to='acs_hms_base.hmsuser')),
                ('blood_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='acs_hms_blood_bank.bloodgroup')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blood_requests', to='acs_hms_base.patient')),
                ('requesting_physician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blood_requests', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Blood Request',
                'verbose_name_plural': 'Blood Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='bloodissuance',
            name='blood_unit',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='issuance', to='acs_hms_blood_bank.bloodunit'),
        ),
        migrations.AddField(
            model_name='bloodissuance',
            name='issued_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blood_issuances', to='acs_hms_base.hmsuser'),
        ),
        migrations.AddField(
            model_name='bloodissuance',
            name='received_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_blood', to='acs_hms_base.hmsuser'),
        ),
        migrations.AddField(
            model_name='bloodissuance',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issuances', to='acs_hms_blood_bank.bloodrequest'),
        ),
        migrations.CreateModel(
            name='BloodDonor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donor_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('zip_code', models.CharField(blank=True, max_length=20)),
                ('weight', models.DecimalField(decimal_places=2, help_text='Weight in kg', max_digits=5)),
                ('height', models.DecimalField(decimal_places=2, help_text='Height in cm', max_digits=5)),
                ('donor_type', models.CharField(choices=[('voluntary', 'Voluntary'), ('family', 'Family Replacement'), ('paid', 'Paid'), ('autologous', 'Autologous')], default='voluntary', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deferred', 'Deferred'), ('blacklisted', 'Blacklisted')], default='active', max_length=20)),
                ('first_donation_date', models.DateField(blank=True, null=True)),
                ('medical_conditions', models.TextField(blank=True)),
                ('medications', models.TextField(blank=True)),
                ('allergies', models.TextField(blank=True)),
                ('deferral_reason', models.TextField(blank=True)),
                ('deferral_date', models.DateField(blank=True, null=True)),
                ('deferral_end_date', models.DateField(blank=True, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('blood_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donors', to='acs_hms_blood_bank.bloodgroup')),
            ],
            options={
                'verbose_name': 'Blood Donor',
                'verbose_name_plural': 'Blood Donors',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.AddField(
            model_name='blooddonation',
            name='donor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donations', to='acs_hms_blood_bank.blooddonor'),
        ),
        migrations.AddField(
            model_name='blooddonation',
            name='phlebotomist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blood_donations', to='acs_hms_base.hmsuser'),
        ),
        migrations.AddField(
            model_name='blooddonation',
            name='physician',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supervised_donations', to='acs_hms_base.hmsuser'),
        ),
    ]
