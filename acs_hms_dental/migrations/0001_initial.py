# Generated by Django 4.2.23 on 2025-07-12 05:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('acs_hms_base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DentalExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('examination_number', models.CharField(max_length=20, unique=True, verbose_name='Examination Number')),
                ('examination_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Examination Date')),
                ('chief_complaint', models.TextField(verbose_name='Chief Complaint')),
                ('history_present_illness', models.TextField(blank=True, null=True, verbose_name='History of Present Illness')),
                ('previous_dental_treatment', models.TextField(blank=True, null=True, verbose_name='Previous Dental Treatment')),
                ('last_dental_visit', models.DateField(blank=True, null=True, verbose_name='Last Dental Visit')),
                ('dental_anxiety', models.BooleanField(default=False, verbose_name='Dental Anxiety')),
                ('brushing_frequency', models.CharField(blank=True, max_length=50, null=True, verbose_name='Brushing Frequency')),
                ('flossing_frequency', models.CharField(blank=True, max_length=50, null=True, verbose_name='Flossing Frequency')),
                ('mouthwash_use', models.BooleanField(default=False, verbose_name='Uses Mouthwash')),
                ('smoking', models.BooleanField(default=False, verbose_name='Smoking')),
                ('alcohol_consumption', models.CharField(blank=True, max_length=50, null=True, verbose_name='Alcohol Consumption')),
                ('teeth_grinding', models.BooleanField(default=False, verbose_name='Teeth Grinding (Bruxism)')),
                ('nail_biting', models.BooleanField(default=False, verbose_name='Nail Biting')),
                ('oral_hygiene_status', models.CharField(blank=True, choices=[('EXCELLENT', 'Excellent'), ('GOOD', 'Good'), ('FAIR', 'Fair'), ('POOR', 'Poor')], max_length=20, null=True, verbose_name='Oral Hygiene Status')),
                ('gums_condition', models.TextField(blank=True, null=True, verbose_name='Gums Condition')),
                ('tongue_condition', models.TextField(blank=True, null=True, verbose_name='Tongue Condition')),
                ('lips_condition', models.TextField(blank=True, null=True, verbose_name='Lips Condition')),
                ('cheeks_condition', models.TextField(blank=True, null=True, verbose_name='Cheeks Condition')),
                ('palate_condition', models.TextField(blank=True, null=True, verbose_name='Palate Condition')),
                ('occlusion_class', models.CharField(blank=True, choices=[('CLASS_I', 'Class I'), ('CLASS_II', 'Class II'), ('CLASS_III', 'Class III')], max_length=20, null=True, verbose_name='Occlusion Class')),
                ('overjet', models.FloatField(blank=True, null=True, verbose_name='Overjet (mm)')),
                ('overbite', models.FloatField(blank=True, null=True, verbose_name='Overbite (mm)')),
                ('bleeding_on_probing', models.BooleanField(default=False, verbose_name='Bleeding on Probing')),
                ('pocket_depth_max', models.FloatField(blank=True, null=True, verbose_name='Maximum Pocket Depth (mm)')),
                ('recession_present', models.BooleanField(default=False, verbose_name='Recession Present')),
                ('tmj_clicking', models.BooleanField(default=False, verbose_name='TMJ Clicking')),
                ('tmj_pain', models.BooleanField(default=False, verbose_name='TMJ Pain')),
                ('mouth_opening_limitation', models.BooleanField(default=False, verbose_name='Mouth Opening Limitation')),
                ('diagnosis', models.TextField(verbose_name='Diagnosis')),
                ('treatment_plan', models.TextField(blank=True, null=True, verbose_name='Treatment Plan')),
                ('urgency', models.CharField(choices=[('EMERGENCY', 'Emergency'), ('URGENT', 'Urgent'), ('ROUTINE', 'Routine'), ('ELECTIVE', 'Elective')], default='ROUTINE', max_length=20, verbose_name='Treatment Urgency')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Follow-up Date')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Additional Notes')),
                ('dentist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dental_examinations', to='acs_hms_base.hmsuser')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dental_examinations', to='acs_hms_base.patient')),
            ],
            options={
                'verbose_name': 'Dental Examination',
                'verbose_name_plural': 'Dental Examinations',
                'ordering': ['-examination_date'],
            },
        ),
        migrations.CreateModel(
            name='DentalMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_name', models.CharField(max_length=200, verbose_name='Material Name')),
                ('material_code', models.CharField(max_length=20, unique=True, verbose_name='Material Code')),
                ('material_type', models.CharField(choices=[('FILLING', 'Filling Material'), ('IMPRESSION', 'Impression Material'), ('CEMENT', 'Dental Cement'), ('ANESTHETIC', 'Anesthetic'), ('CLEANING', 'Cleaning Supplies'), ('PROTECTIVE', 'Protective Equipment'), ('INSTRUMENT', 'Dental Instruments'), ('MEDICATION', 'Dental Medication'), ('PROSTHETIC', 'Prosthetic Material'), ('ORTHODONTIC', 'Orthodontic Material')], max_length=20, verbose_name='Material Type')),
                ('brand', models.CharField(max_length=100, verbose_name='Brand')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('composition', models.TextField(blank=True, null=True, verbose_name='Composition')),
                ('indications', models.TextField(blank=True, null=True, verbose_name='Indications')),
                ('contraindications', models.TextField(blank=True, null=True, verbose_name='Contraindications')),
                ('usage_instructions', models.TextField(blank=True, null=True, verbose_name='Usage Instructions')),
                ('unit_type', models.CharField(max_length=50, verbose_name='Unit Type')),
                ('cost_per_unit', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost per Unit')),
                ('current_stock', models.PositiveIntegerField(default=0, verbose_name='Current Stock')),
                ('minimum_stock', models.PositiveIntegerField(default=10, verbose_name='Minimum Stock Level')),
                ('storage_requirements', models.TextField(blank=True, null=True, verbose_name='Storage Requirements')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('supplier', models.CharField(max_length=200, verbose_name='Supplier')),
                ('supplier_contact', models.CharField(blank=True, max_length=200, null=True, verbose_name='Supplier Contact')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Dental Material',
                'verbose_name_plural': 'Dental Materials',
                'ordering': ['material_name'],
            },
        ),
        migrations.CreateModel(
            name='DentalTreatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatment_name', models.CharField(max_length=200, verbose_name='Treatment Name')),
                ('treatment_code', models.CharField(max_length=20, unique=True, verbose_name='Treatment Code')),
                ('category', models.CharField(choices=[('PREVENTIVE', 'Preventive'), ('RESTORATIVE', 'Restorative'), ('ENDODONTIC', 'Endodontic'), ('PERIODONTAL', 'Periodontal'), ('ORAL_SURGERY', 'Oral Surgery'), ('ORTHODONTIC', 'Orthodontic'), ('PROSTHODONTIC', 'Prosthodontic'), ('COSMETIC', 'Cosmetic'), ('EMERGENCY', 'Emergency')], max_length=20, verbose_name='Category')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('duration_minutes', models.PositiveIntegerField(verbose_name='Duration (Minutes)')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Base Price')),
                ('requires_anesthesia', models.BooleanField(default=False, verbose_name='Requires Anesthesia')),
                ('requires_assistant', models.BooleanField(default=False, verbose_name='Requires Assistant')),
                ('pre_treatment_instructions', models.TextField(blank=True, null=True, verbose_name='Pre-treatment Instructions')),
                ('post_treatment_instructions', models.TextField(blank=True, null=True, verbose_name='Post-treatment Instructions')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Dental Treatment',
                'verbose_name_plural': 'Dental Treatments',
                'ordering': ['treatment_name'],
            },
        ),
        migrations.CreateModel(
            name='DentalProcedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('procedure_number', models.CharField(max_length=20, unique=True, verbose_name='Procedure Number')),
                ('scheduled_date', models.DateTimeField(verbose_name='Scheduled Date')),
                ('actual_start_time', models.DateTimeField(blank=True, null=True, verbose_name='Actual Start Time')),
                ('actual_end_time', models.DateTimeField(blank=True, null=True, verbose_name='Actual End Time')),
                ('affected_teeth', models.CharField(max_length=200, verbose_name='Affected Teeth Numbers')),
                ('anesthesia_used', models.BooleanField(default=False, verbose_name='Anesthesia Used')),
                ('anesthesia_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Anesthesia Type')),
                ('anesthesia_amount', models.CharField(blank=True, max_length=50, null=True, verbose_name='Anesthesia Amount')),
                ('procedure_notes', models.TextField(blank=True, null=True, verbose_name='Procedure Notes')),
                ('materials_used', models.TextField(blank=True, null=True, verbose_name='Materials Used')),
                ('technique_used', models.TextField(blank=True, null=True, verbose_name='Technique Used')),
                ('procedure_outcome', models.TextField(blank=True, null=True, verbose_name='Procedure Outcome')),
                ('complications', models.TextField(blank=True, null=True, verbose_name='Complications')),
                ('post_procedure_instructions', models.TextField(blank=True, null=True, verbose_name='Post-procedure Instructions')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Follow-up Date')),
                ('procedure_cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Procedure Cost')),
                ('insurance_covered', models.BooleanField(default=False, verbose_name='Insurance Covered')),
                ('patient_payment', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Patient Payment')),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('POSTPONED', 'Postponed')], default='SCHEDULED', max_length=20, verbose_name='Status')),
                ('assistant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assisted_dental_procedures', to='acs_hms_base.hmsuser')),
                ('examination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procedures', to='acs_hms_dental.dentalexamination')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dental_procedures', to='acs_hms_base.patient')),
                ('primary_dentist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_dental_procedures', to='acs_hms_base.hmsuser')),
                ('treatment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='procedures', to='acs_hms_dental.dentaltreatment')),
            ],
            options={
                'verbose_name': 'Dental Procedure',
                'verbose_name_plural': 'Dental Procedures',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='DentalEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_name', models.CharField(max_length=200, verbose_name='Equipment Name')),
                ('equipment_type', models.CharField(choices=[('DENTAL_CHAIR', 'Dental Chair'), ('XRAY_UNIT', 'X-Ray Unit'), ('AUTOCLAVE', 'Autoclave'), ('ULTRASONIC_CLEANER', 'Ultrasonic Cleaner'), ('COMPRESSOR', 'Air Compressor'), ('SUCTION_UNIT', 'Suction Unit'), ('LASER', 'Dental Laser'), ('INTRAORAL_CAMERA', 'Intraoral Camera'), ('CURING_LIGHT', 'Curing Light'), ('SCALER', 'Ultrasonic Scaler'), ('HANDPIECE', 'Dental Handpiece'), ('GENERAL', 'General Equipment')], max_length=20, verbose_name='Equipment Type')),
                ('brand', models.CharField(max_length=100, verbose_name='Brand')),
                ('model', models.CharField(max_length=100, verbose_name='Model')),
                ('serial_number', models.CharField(max_length=100, unique=True, verbose_name='Serial Number')),
                ('purchase_date', models.DateField(verbose_name='Purchase Date')),
                ('purchase_cost', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Purchase Cost')),
                ('supplier', models.CharField(max_length=200, verbose_name='Supplier')),
                ('warranty_expiry', models.DateField(blank=True, null=True, verbose_name='Warranty Expiry')),
                ('location', models.CharField(max_length=200, verbose_name='Location')),
                ('last_maintenance', models.DateField(blank=True, null=True, verbose_name='Last Maintenance')),
                ('next_maintenance', models.DateField(blank=True, null=True, verbose_name='Next Maintenance')),
                ('maintenance_interval_days', models.PositiveIntegerField(default=90, verbose_name='Maintenance Interval (Days)')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('MAINTENANCE', 'Under Maintenance'), ('REPAIR', 'Under Repair'), ('RETIRED', 'Retired')], default='ACTIVE', max_length=20, verbose_name='Status')),
                ('specifications', models.TextField(blank=True, null=True, verbose_name='Specifications')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_dental_equipment', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Dental Equipment',
                'verbose_name_plural': 'Dental Equipment',
                'ordering': ['equipment_name'],
            },
        ),
        migrations.CreateModel(
            name='ToothChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tooth_number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(32)], verbose_name='Tooth Number (1-32)')),
                ('tooth_status', models.CharField(choices=[('HEALTHY', 'Healthy'), ('DECAY', 'Decay'), ('FILLED', 'Filled'), ('CROWN', 'Crown'), ('BRIDGE', 'Bridge'), ('IMPLANT', 'Implant'), ('MISSING', 'Missing'), ('EXTRACTED', 'Extracted'), ('ROOT_CANAL', 'Root Canal'), ('FRACTURED', 'Fractured')], max_length=20, verbose_name='Tooth Status')),
                ('condition_notes', models.TextField(blank=True, null=True, verbose_name='Condition Notes')),
                ('mesial_surface', models.CharField(blank=True, max_length=20, null=True, verbose_name='Mesial Surface')),
                ('distal_surface', models.CharField(blank=True, max_length=20, null=True, verbose_name='Distal Surface')),
                ('buccal_surface', models.CharField(blank=True, max_length=20, null=True, verbose_name='Buccal Surface')),
                ('lingual_surface', models.CharField(blank=True, max_length=20, null=True, verbose_name='Lingual Surface')),
                ('occlusal_surface', models.CharField(blank=True, max_length=20, null=True, verbose_name='Occlusal Surface')),
                ('probing_depth_mb', models.FloatField(blank=True, null=True, verbose_name='Probing Depth MB (mm)')),
                ('probing_depth_b', models.FloatField(blank=True, null=True, verbose_name='Probing Depth B (mm)')),
                ('probing_depth_db', models.FloatField(blank=True, null=True, verbose_name='Probing Depth DB (mm)')),
                ('probing_depth_ml', models.FloatField(blank=True, null=True, verbose_name='Probing Depth ML (mm)')),
                ('probing_depth_l', models.FloatField(blank=True, null=True, verbose_name='Probing Depth L (mm)')),
                ('probing_depth_dl', models.FloatField(blank=True, null=True, verbose_name='Probing Depth DL (mm)')),
                ('mobility', models.CharField(blank=True, choices=[('0', 'Class 0 (Normal)'), ('1', 'Class 1 (Slight)'), ('2', 'Class 2 (Moderate)'), ('3', 'Class 3 (Severe)')], max_length=20, null=True, verbose_name='Tooth Mobility')),
                ('examination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tooth_charts', to='acs_hms_dental.dentalexamination')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tooth_charts', to='acs_hms_base.patient')),
            ],
            options={
                'verbose_name': 'Tooth Chart',
                'verbose_name_plural': 'Tooth Charts',
                'ordering': ['tooth_number'],
                'unique_together': {('examination', 'tooth_number')},
            },
        ),
    ]
