# Generated by Django 4.2.23 on 2025-07-12 05:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('acs_hms_hospitalization', '0001_initial'),
        ('acs_hms_base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ambulance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ambulance_number', models.CharField(max_length=20, unique=True, verbose_name='Ambulance Number')),
                ('vehicle_registration', models.CharField(max_length=20, unique=True, verbose_name='Vehicle Registration')),
                ('ambulance_type', models.CharField(choices=[('BASIC', 'Basic Life Support (BLS)'), ('ADVANCED', 'Advanced Life Support (ALS)'), ('CRITICAL', 'Critical Care Transport'), ('NEONATAL', 'Neonatal Transport'), ('PSYCHIATRIC', 'Psychiatric Transport')], max_length=20, verbose_name='Type')),
                ('make', models.CharField(max_length=50, verbose_name='Make')),
                ('model', models.CharField(max_length=50, verbose_name='Model')),
                ('year', models.PositiveIntegerField(verbose_name='Year')),
                ('equipment_list', models.TextField(blank=True, null=True, verbose_name='Equipment List')),
                ('medical_equipment', models.TextField(blank=True, null=True, verbose_name='Medical Equipment')),
                ('base_location', models.CharField(max_length=200, verbose_name='Base Location')),
                ('current_location', models.CharField(blank=True, max_length=200, null=True, verbose_name='Current Location')),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('DISPATCHED', 'Dispatched'), ('ON_SCENE', 'On Scene'), ('TRANSPORTING', 'Transporting'), ('AT_HOSPITAL', 'At Hospital'), ('OUT_OF_SERVICE', 'Out of Service'), ('MAINTENANCE', 'Under Maintenance')], default='AVAILABLE', max_length=20, verbose_name='Status')),
                ('last_maintenance_date', models.DateField(blank=True, null=True, verbose_name='Last Maintenance Date')),
                ('next_maintenance_date', models.DateField(blank=True, null=True, verbose_name='Next Maintenance Date')),
                ('maintenance_notes', models.TextField(blank=True, null=True, verbose_name='Maintenance Notes')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('primary_driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_ambulance_driver', to='acs_hms_base.hmsuser')),
                ('primary_paramedic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_ambulance_paramedic', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Ambulance',
                'verbose_name_plural': 'Ambulances',
                'ordering': ['ambulance_number'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyCall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('call_number', models.CharField(max_length=20, unique=True, verbose_name='Call Number')),
                ('call_date', models.DateTimeField(auto_now_add=True, verbose_name='Call Date')),
                ('caller_name', models.CharField(max_length=100, verbose_name='Caller Name')),
                ('caller_phone', models.CharField(max_length=20, verbose_name='Caller Phone')),
                ('call_type', models.CharField(choices=[('MEDICAL', 'Medical Emergency'), ('TRAUMA', 'Trauma/Accident'), ('CARDIAC', 'Cardiac Arrest'), ('RESPIRATORY', 'Respiratory Emergency'), ('OBSTETRIC', 'Obstetric Emergency'), ('PEDIATRIC', 'Pediatric Emergency'), ('PSYCHIATRIC', 'Psychiatric Emergency'), ('POISON', 'Poisoning'), ('BURN', 'Burn Injury'), ('TRANSFER', 'Inter-facility Transfer')], max_length=20, verbose_name='Call Type')),
                ('priority', models.CharField(choices=[('ALPHA', 'Alpha - Non-Emergency'), ('BRAVO', 'Bravo - Minor Emergency'), ('CHARLIE', 'Charlie - Moderate Emergency'), ('DELTA', 'Delta - Major Emergency'), ('ECHO', 'Echo - Life Threatening')], max_length=10, verbose_name='Priority')),
                ('chief_complaint', models.TextField(verbose_name='Chief Complaint')),
                ('incident_address', models.TextField(verbose_name='Incident Address')),
                ('incident_latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('incident_longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('patient_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Patient Name')),
                ('patient_age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Patient Age')),
                ('patient_gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True, verbose_name='Patient Gender')),
                ('dispatch_time', models.DateTimeField(blank=True, null=True, verbose_name='Dispatch Time')),
                ('response_time_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Response Time (Minutes)')),
                ('on_scene_time', models.DateTimeField(blank=True, null=True, verbose_name='On Scene Time')),
                ('transport_time', models.DateTimeField(blank=True, null=True, verbose_name='Transport Time')),
                ('hospital_arrival_time', models.DateTimeField(blank=True, null=True, verbose_name='Hospital Arrival Time')),
                ('status', models.CharField(choices=[('RECEIVED', 'Call Received'), ('DISPATCHED', 'Ambulance Dispatched'), ('ON_SCENE', 'On Scene'), ('TRANSPORTING', 'Transporting'), ('AT_HOSPITAL', 'At Hospital'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='RECEIVED', max_length=20, verbose_name='Status')),
                ('dispatch_notes', models.TextField(blank=True, null=True, verbose_name='Dispatch Notes')),
                ('completion_notes', models.TextField(blank=True, null=True, verbose_name='Completion Notes')),
                ('ambulance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emergency_calls', to='acs_hms_emergency.ambulance')),
                ('destination_hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emergency_calls', to='acs_hms_base.hospital')),
                ('dispatched_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dispatched_calls', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Emergency Call',
                'verbose_name_plural': 'Emergency Calls',
                'ordering': ['-call_date'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_number', models.CharField(max_length=20, unique=True, verbose_name='Case Number')),
                ('arrival_date', models.DateTimeField(auto_now_add=True, verbose_name='Arrival Date')),
                ('arrival_mode', models.CharField(choices=[('AMBULANCE', 'Ambulance'), ('WALK_IN', 'Walk-in'), ('HELICOPTER', 'Helicopter'), ('TRANSFER', 'Transfer'), ('POLICE', 'Police'), ('PRIVATE_VEHICLE', 'Private Vehicle')], max_length=20, verbose_name='Arrival Mode')),
                ('triage_level', models.CharField(choices=[('1', 'Level 1 - Immediate (Red)'), ('2', 'Level 2 - Urgent (Orange)'), ('3', 'Level 3 - Less Urgent (Yellow)'), ('4', 'Level 4 - Non-urgent (Green)'), ('5', 'Level 5 - Routine (Blue)')], max_length=1, verbose_name='Triage Level')),
                ('triage_time', models.DateTimeField(verbose_name='Triage Time')),
                ('chief_complaint', models.TextField(verbose_name='Chief Complaint')),
                ('presenting_symptoms', models.TextField(blank=True, null=True, verbose_name='Presenting Symptoms')),
                ('temperature', models.FloatField(blank=True, null=True, verbose_name='Temperature (Â°C)')),
                ('blood_pressure_systolic', models.IntegerField(blank=True, null=True, verbose_name='Blood Pressure (Systolic)')),
                ('blood_pressure_diastolic', models.IntegerField(blank=True, null=True, verbose_name='Blood Pressure (Diastolic)')),
                ('pulse_rate', models.IntegerField(blank=True, null=True, verbose_name='Pulse Rate')),
                ('respiratory_rate', models.IntegerField(blank=True, null=True, verbose_name='Respiratory Rate')),
                ('oxygen_saturation', models.FloatField(blank=True, null=True, verbose_name='Oxygen Saturation (%)')),
                ('pain_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Pain Score (0-10)')),
                ('treatment_start_time', models.DateTimeField(blank=True, null=True, verbose_name='Treatment Start Time')),
                ('status', models.CharField(choices=[('TRIAGED', 'Triaged'), ('WAITING', 'Waiting'), ('IN_TREATMENT', 'In Treatment'), ('OBSERVATION', 'Under Observation'), ('ADMITTED', 'Admitted'), ('DISCHARGED', 'Discharged'), ('TRANSFERRED', 'Transferred'), ('DECEASED', 'Deceased'), ('LEFT_AMA', 'Left Against Medical Advice')], default='TRIAGED', max_length=20, verbose_name='Status')),
                ('diagnosis', models.TextField(blank=True, null=True, verbose_name='Diagnosis')),
                ('treatment_provided', models.TextField(blank=True, null=True, verbose_name='Treatment Provided')),
                ('discharge_time', models.DateTimeField(blank=True, null=True, verbose_name='Discharge Time')),
                ('discharge_instructions', models.TextField(blank=True, null=True, verbose_name='Discharge Instructions')),
                ('follow_up_required', models.BooleanField(default=False, verbose_name='Follow-up Required')),
                ('follow_up_instructions', models.TextField(blank=True, null=True, verbose_name='Follow-up Instructions')),
                ('admission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emergency_cases', to='acs_hms_hospitalization.admission')),
                ('assigned_doctor', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'DOCTOR'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emergency_cases', to='acs_hms_base.hmsuser')),
                ('emergency_call', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emergency_cases', to='acs_hms_emergency.emergencycall')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_cases', to='acs_hms_base.patient')),
                ('triage_nurse', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'NURSE'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='triaged_cases', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Emergency Case',
                'verbose_name_plural': 'Emergency Cases',
                'ordering': ['-arrival_date'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyProtocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol_name', models.CharField(max_length=100, verbose_name='Protocol Name')),
                ('protocol_type', models.CharField(choices=[('CARDIAC', 'Cardiac Emergency'), ('TRAUMA', 'Trauma Protocol'), ('STROKE', 'Stroke Protocol'), ('RESPIRATORY', 'Respiratory Emergency'), ('POISONING', 'Poisoning Protocol'), ('BURNS', 'Burns Protocol'), ('OBSTETRIC', 'Obstetric Emergency'), ('PEDIATRIC', 'Pediatric Emergency'), ('PSYCHIATRIC', 'Psychiatric Emergency'), ('GENERAL', 'General Protocol')], max_length=20, verbose_name='Protocol Type')),
                ('protocol_code', models.CharField(max_length=20, unique=True, verbose_name='Protocol Code')),
                ('description', models.TextField(verbose_name='Description')),
                ('indications', models.TextField(verbose_name='Indications')),
                ('contraindications', models.TextField(blank=True, null=True, verbose_name='Contraindications')),
                ('assessment_steps', models.TextField(verbose_name='Assessment Steps')),
                ('treatment_steps', models.TextField(verbose_name='Treatment Steps')),
                ('medication_protocol', models.TextField(blank=True, null=True, verbose_name='Medication Protocol')),
                ('required_equipment', models.TextField(blank=True, null=True, verbose_name='Required Equipment')),
                ('version', models.CharField(max_length=10, verbose_name='Version')),
                ('effective_date', models.DateField(verbose_name='Effective Date')),
                ('review_date', models.DateField(verbose_name='Review Date')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Emergency Protocol',
                'verbose_name_plural': 'Emergency Protocols',
                'ordering': ['protocol_name'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyTreatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('treatment_time', models.DateTimeField(verbose_name='Treatment Time')),
                ('procedure_performed', models.TextField(verbose_name='Procedure Performed')),
                ('medications_given', models.TextField(blank=True, null=True, verbose_name='Medications Given')),
                ('patient_response', models.TextField(blank=True, null=True, verbose_name='Patient Response')),
                ('complications', models.TextField(blank=True, null=True, verbose_name='Complications')),
                ('treatment_notes', models.TextField(blank=True, null=True, verbose_name='Treatment Notes')),
                ('emergency_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='treatments', to='acs_hms_emergency.emergencycase')),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_treatments', to='acs_hms_base.hmsuser')),
            ],
            options={
                'verbose_name': 'Emergency Treatment',
                'verbose_name_plural': 'Emergency Treatments',
                'ordering': ['-treatment_time'],
            },
        ),
        migrations.CreateModel(
            name='EmergencyEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_name', models.CharField(max_length=100, verbose_name='Equipment Name')),
                ('equipment_type', models.CharField(choices=[('DEFIBRILLATOR', 'Defibrillator'), ('VENTILATOR', 'Ventilator'), ('MONITOR', 'Patient Monitor'), ('SUCTION', 'Suction Unit'), ('OXYGEN', 'Oxygen System'), ('STRETCHER', 'Stretcher'), ('WHEELCHAIR', 'Wheelchair'), ('TRAUMA_KIT', 'Trauma Kit'), ('DRUG_KIT', 'Drug Kit'), ('INTUBATION', 'Intubation Kit')], max_length=20, verbose_name='Equipment Type')),
                ('serial_number', models.CharField(max_length=50, unique=True, verbose_name='Serial Number')),
                ('current_location', models.CharField(max_length=100, verbose_name='Current Location')),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('IN_USE', 'In Use'), ('MAINTENANCE', 'Under Maintenance'), ('OUT_OF_ORDER', 'Out of Order'), ('CLEANING', 'Cleaning')], default='AVAILABLE', max_length=20, verbose_name='Status')),
                ('last_maintenance_date', models.DateField(blank=True, null=True, verbose_name='Last Maintenance Date')),
                ('next_maintenance_date', models.DateField(blank=True, null=True, verbose_name='Next Maintenance Date')),
                ('equipment_notes', models.TextField(blank=True, null=True, verbose_name='Equipment Notes')),
                ('assigned_ambulance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipment', to='acs_hms_emergency.ambulance')),
            ],
            options={
                'verbose_name': 'Emergency Equipment',
                'verbose_name_plural': 'Emergency Equipment',
                'ordering': ['equipment_name'],
            },
        ),
        migrations.CreateModel(
            name='AmbulanceTrip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trip_number', models.CharField(max_length=20, unique=True, verbose_name='Trip Number')),
                ('trip_type', models.CharField(choices=[('EMERGENCY', 'Emergency Response'), ('TRANSFER', 'Inter-facility Transfer'), ('DISCHARGE', 'Discharge Transport'), ('ROUTINE', 'Routine Transport'), ('STANDBY', 'Standby Coverage')], max_length=20, verbose_name='Trip Type')),
                ('start_time', models.DateTimeField(verbose_name='Start Time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='End Time')),
                ('origin_address', models.TextField(verbose_name='Origin Address')),
                ('destination_address', models.TextField(verbose_name='Destination Address')),
                ('patient_condition', models.TextField(verbose_name='Patient Condition')),
                ('vital_signs_departure', models.TextField(blank=True, null=True, verbose_name='Vital Signs at Departure')),
                ('vital_signs_arrival', models.TextField(blank=True, null=True, verbose_name='Vital Signs at Arrival')),
                ('treatment_during_transport', models.TextField(blank=True, null=True, verbose_name='Treatment During Transport')),
                ('medications_administered', models.TextField(blank=True, null=True, verbose_name='Medications Administered')),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='SCHEDULED', max_length=20, verbose_name='Status')),
                ('starting_mileage', models.PositiveIntegerField(verbose_name='Starting Mileage')),
                ('ending_mileage', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ending Mileage')),
                ('trip_notes', models.TextField(blank=True, null=True, verbose_name='Trip Notes')),
                ('additional_crew', models.ManyToManyField(blank=True, related_name='ambulance_trips_crew', to='acs_hms_base.hmsuser')),
                ('ambulance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='acs_hms_emergency.ambulance')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ambulance_trips_driver', to='acs_hms_base.hmsuser')),
                ('emergency_call', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ambulance_trips', to='acs_hms_emergency.emergencycall')),
                ('emergency_case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ambulance_trips', to='acs_hms_emergency.emergencycase')),
                ('paramedic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ambulance_trips_paramedic', to='acs_hms_base.hmsuser')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ambulance_trips', to='acs_hms_base.patient')),
            ],
            options={
                'verbose_name': 'Ambulance Trip',
                'verbose_name_plural': 'Ambulance Trips',
                'ordering': ['-start_time'],
            },
        ),
    ]
